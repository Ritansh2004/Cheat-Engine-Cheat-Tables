<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>113</ID>
      <Description>"BioShock Infinite"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Burial At Sea - Episode 1/----------------------------/Clash In The Clouds/Story   [Health]"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
local pHealthOn = getAddressList().getMemoryRecordByDescription("----------------------------/Burial At Sea - Episode 2/---------------------/------   [Health]")
if (pHealthOn.Active) then
 pHealthOn.Active = false
end
{$asm}
aobscanmodule(health_everything,BioShockInfinite.exe,F3 0F 11 87 FC 25 00 00)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(health_everything)
newmem:
  cmp [edi+2528],1
  jne code
  jmp return
code:
  movss [edi+25FC],xmm0
  jmp return
health_everything:
  jmp newmem
  nop 3
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(health_everything)
health_everything:
  db F3 0F 11 87 FC 25 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"----------------------------/Burial At Sea - Episode 2/---------------------/------   [Health]"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
local pHealthOff = getAddressList().getMemoryRecordByDescription("Burial At Sea - Episode 1/----------------------------/Clash In The Clouds/Story   [Health]")
if (pHealthOff.Active) then
 pHealthOff.Active = false
end
{$asm}
aobscanmodule(health_dlc,BioShockInfinite.exe,F3 0F 11 87 FC 25 00 00)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(health_dlc)
newmem:
  cmp [edi+14FC],1
  jne code
  jmp return
code:
  movss [edi+25FC],xmm0
  jmp return
health_dlc:
  jmp newmem
  nop 3
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(health_dlc)
health_dlc:
  db F3 0F 11 87 FC 25 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Burial At Sea - Episode 1/Burial At Sea - Episode 2/Clash In The Clouds/Story   [Inventory]   Ammo/Infusion"</Description>
          <LastState/>
          <Color>800000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory_ammo_capacity_infusion,BioShockInfinite.exe,8B 45 08 8B 54 24 3C)
alloc(newmem,$100)
label(return)
registersymbol(inventory_ammo_capacity_infusion)
newmem:
  add [ebp+08],A
  mov edx,[esp+3C]
  jmp return
inventory_ammo_capacity_infusion:
  jmp newmem
  nop 2
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(inventory_ammo_capacity_infusion)
inventory_ammo_capacity_infusion:
  db 8B 45 08 8B 54 24 3C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Burial At Sea - Episode 1/Burial At Sea - Episode 2/Clash In The Clouds/Story   [Inventory]   Eve/Salts"</Description>
          <LastState/>
          <Color>4080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(eve_salts,BioShockInfinite.exe,89 47 58 E8 4A 28 D8 FF)
registersymbol(eve_salts)
eve_salts:
  db 90 90 90
[DISABLE]
unregistersymbol(eve_salts)
eve_salts:
  db 89 47 58 E8 4A 28 D8 FF
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Burial At Sea - Episode 1/Burial At Sea - Episode 2/---------------------/Story   [Inventory]   Lockpicks"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory_lockpicks_collected,BioShockInfinite.exe,01 5E 64 68 00 01 00 00)
aobscanmodule(inventory_lockpicks_used,BioShockInfinite.exe,29 46 64 68 00 01 00 00)
alloc(newmem_x,$100)
alloc(newmem_y,$100)
label(return_x)
label(return_y)
registersymbol(inventory_lockpicks_collected)
registersymbol(inventory_lockpicks_used)
newmem_x:
  mov [esi+64],3E7
  push 00000100
  jmp return_x
inventory_lockpicks_collected:
  jmp newmem_x
  nop 3
return_x:
newmem_y:
  mov [esi+64],3E7
  push 00000100
  jmp return_y
inventory_lockpicks_used:
  jmp newmem_y
  nop 3
return_y:
[DISABLE]
dealloc(newmem_x)
dealloc(newmem_y)
unregistersymbol(inventory_lockpicks_collected)
unregistersymbol(inventory_lockpicks_used)
inventory_lockpicks_collected:
  db 01 5E 64 68 00 01 00 00
inventory_lockpicks_used:
  db 29 46 64 68 00 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Burial At Sea - Episode 1/Burial At Sea - Episode 2/---------------------/Story   [Inventory]   Silver Eagles"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory_silver_eagles_spent,BioShockInfinite.exe,29 5E 54 6A 10)
alloc(newmem,$100)
label(code)
label(return)
label(silver_eagles_spent)
registersymbol(inventory_silver_eagles_spent)
newmem:
  cmp [esi+80],130
  jne silver_eagles_spent
  jmp code
code:
  sub [esi+54],ebx
  push 10
  jmp return
silver_eagles_spent:
  mov [esi+54],1869F
  push 10
  jmp return
inventory_silver_eagles_spent:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(inventory_silver_eagles_spent)
inventory_silver_eagles_spent:
  db 29 5E 54 6A 10
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"---------------------------/Burial At Sea - Episode 2/---------------------/------   [Medical Kit]"</Description>
          <LastState/>
          <Color>000080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(medical_kit,BioShockInfinite.exe,89 BE 0C 26 00 00)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(medical_kit)
newmem:
  cmp [esi+38],5
  jne code
  mov [esi+260C],5
  jmp return
code:
  mov [esi+260C],edi
  jmp return
medical_kit:
  jmp newmem
  nop
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(medical_kit)
medical_kit:
  db 89 BE 0C 26 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"---------------------------/---------------------------/Clash In The Clouds/------   [Player Score]"</Description>
          <LastState/>
          <Color>004000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(clash_in_the_clouds_score,BioShockInfinite.exe,89 86 E8 1B 00 00)
alloc(newmem,$100)
label(return)
registersymbol(clash_in_the_clouds_score)
newmem:
  mov [esi+1BE8],(int)2147483647
  jmp return
clash_in_the_clouds_score:
  jmp newmem
  nop
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(clash_in_the_clouds_score)
clash_in_the_clouds_score:
  db 89 86 E8 1B 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Burial At Sea - Episode 1/---------------------------/Clash In The Clouds/Story   [Shield]"</Description>
          <LastState/>
          <Color>800080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(shield,BioShockInfinite.exe,F3 0F 11 86 04 26 00 00)
alloc(newmem,$100)
label(code)
label(protection)
label(return)
registersymbol(shield)
newmem:
  cmp [esi+2600],461C3000
  jne protection
  jmp code
code:
  movss [esi+2604],xmm0
  jmp return
protection:
  mov [esi+2604],(float)9999
  jmp return
shield:
  jmp newmem
  nop 3
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(shield)
shield:
  db F3 0F 11 86 04 26 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"---------------------------/---------------------------/----------------------/Story   [Stamina]   Songbird"</Description>
          <LastState/>
          <Color>8000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(songbird,BioShockInfinite.exe,F3 0F 11 86 8C 00 00 00 8B)
alloc(newmem,$100)
label(return)
registersymbol(songbird)
newmem:
  movss [esi+8C],xmm0
  mov [esi+8C],(float)100
  jmp return
songbird:
  jmp newmem
  nop 3
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(songbird)
songbird:
  db F3 0F 11 86 8C 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"---------------------------/---------------------------/----------------------/Story   [Stamina]   Zepellin Endurance"</Description>
          <LastState/>
          <Color>FF8080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(zeppelin_endurance,BioShockInfinite.exe,F3 0F 11 8E B0 04 00 00)
registersymbol(zeppelin_endurance)
zeppelin_endurance:
  db 90 90 90 90 90 90 90 90
[DISABLE]
unregistersymbol(zeppelin_endurance)
zeppelin_endurance:
  db F3 0F 11 8E B0 04 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"BioShockInfinite.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)


</LuaScript>
</CheatTable>
