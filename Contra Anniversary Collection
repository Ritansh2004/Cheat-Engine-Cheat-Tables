<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>104</ID>
      <Description>"--Contra Anniversary Collection Update v1.1.0--"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"01. Contra 1987 Arcade + Jap"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+EB684)
define(bytes,88 0C 18 8B 42 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basecontra)
registersymbol(basecontra)

newmem:

code:
mov [basecontra],eax
  mov [eax+ebx],cl
  mov eax,[edx+08]
  jmp return

basecontra:
db 0
address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [eax+ebx],cl
  // mov eax,[edx+08]
unregistersymbol(basecontra)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+EB504

"game.exe"+EB4EA: 23 D3                 -  and edx,ebx
"game.exe"+EB4EC: C1 E2 04              -  shl edx,04
"game.exe"+EB4EF: 03 D0                 -  add edx,eax
"game.exe"+EB4F1: 8B 02                 -  mov eax,[edx]
"game.exe"+EB4F3: 8B 4C 24 10           -  mov ecx,[esp+10]
"game.exe"+EB4F7: 85 C0                 -  test eax,eax
"game.exe"+EB4F9: 74 0C                 -  je game.exe+EB507
"game.exe"+EB4FB: 03 C0                 -  add eax,eax
"game.exe"+EB4FD: 8B 44 C7 28           -  mov eax,[edi+eax*8+28]
"game.exe"+EB501: 2B 42 04              -  sub eax,[edx+04]
// ---------- INJECTING HERE ----------
"game.exe"+EB504: 88 0C 18              -  mov [eax+ebx],cl
"game.exe"+EB507: 8B 42 08              -  mov eax,[edx+08]
// ---------- DONE INJECTING  ----------
"game.exe"+EB50A: 85 C0                 -  test eax,eax
"game.exe"+EB50C: 74 07                 -  je game.exe+EB515
"game.exe"+EB50E: 51                    -  push ecx
"game.exe"+EB50F: 8B 0F                 -  mov ecx,[edi]
"game.exe"+EB511: 8B D5                 -  mov edx,ebp
"game.exe"+EB513: FF D0                 -  call eax
"game.exe"+EB515: 8A 46 35              -  mov al,[esi+35]
"game.exe"+EB518: 84 C0                 -  test al,al
"game.exe"+EB51A: 5F                    -  pop edi
"game.exe"+EB51B: 0F 95 C1              -  setne cl
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Credits"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basecontra]+101A</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basecontra]+1081</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basecontra]+1246</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"02. Super Contra 1988 Arcade + Jap"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+F845F)
define(bytes,0F B6 04 18 EB 11)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basesuperc)
registersymbol(basesuperc)

newmem:

code:
mov [basesuperc],eax
  movzx eax,byte ptr [eax+ebx]
  jmp game.exe+F8476
  jmp return

basesuperc:
db 0
address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // movzx eax,byte ptr [eax+ebx]
  // jmp game.exe+F83B6

dealloc(newmem)
unregistersymbol(basesuperc)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+F839F

"game.exe"+F8386: 8B 56 0C        -  mov edx,[esi+0C]
"game.exe"+F8389: 23 D3           -  and edx,ebx
"game.exe"+F838B: C1 E2 04        -  shl edx,04
"game.exe"+F838E: 03 D0           -  add edx,eax
"game.exe"+F8390: 8B 02           -  mov eax,[edx]
"game.exe"+F8392: 85 C0           -  test eax,eax
"game.exe"+F8394: 74 0F           -  je game.exe+F83A5
"game.exe"+F8396: 03 C0           -  add eax,eax
"game.exe"+F8398: 8B 44 C6 28     -  mov eax,[esi+eax*8+28]
"game.exe"+F839C: 2B 42 04        -  sub eax,[edx+04]
// ---------- INJECTING HERE ----------
"game.exe"+F839F: 0F B6 04 18     -  movzx eax,byte ptr [eax+ebx]
"game.exe"+F83A3: EB 11           -  jmp game.exe+F83B6
// ---------- DONE INJECTING  ----------
"game.exe"+F83A5: 8B 42 08        -  mov eax,[edx+08]
"game.exe"+F83A8: 85 C0           -  test eax,eax
"game.exe"+F83AA: 74 08           -  je game.exe+F83B4
"game.exe"+F83AC: 8B 0E           -  mov ecx,[esi]
"game.exe"+F83AE: 8B D5           -  mov edx,ebp
"game.exe"+F83B0: FF D0           -  call eax
"game.exe"+F83B2: EB 02           -  jmp game.exe+F83B6
"game.exe"+F83B4: 33 C0           -  xor eax,eax
"game.exe"+F83B6: 84 C0           -  test al,al
"game.exe"+F83B8: 88 47 34        -  mov [edi+34],al
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Credits"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basesuperc]+4086</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basesuperc]+40A0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basesuperc]+4A1B</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"03. Contra 1988 NES"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-15
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+43DCF)
define(bytes,88 14 07 66 83 46 14 02)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(baseconnes)
registersymbol(baseconnes)

newmem:

code:
mov [baseconnes],eax
  mov [edi+eax],dl
  add word ptr [esi+14],02
  jmp return
baseconnes:
db 0
address:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [edi+eax],dl
  // add word ptr [esi+14],02
unregistersymbol(baseconnes)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+43CCF

"game.exe"+43CB0: B9 02 00 00 00        -  mov ecx,00000002
"game.exe"+43CB5: 84 D2                 -  test dl,dl
"game.exe"+43CB7: 0F 45 C8              -  cmovne ecx,eax
"game.exe"+43CBA: 8A 46 1A              -  mov al,[esi+1A]
"game.exe"+43CBD: 24 7D                 -  and al,7D
"game.exe"+43CBF: 0A C1                 -  or al,cl
"game.exe"+43CC1: 88 46 1A              -  mov [esi+1A],al
"game.exe"+43CC4: 8B 86 AC 00 00 00     -  mov eax,[esi+000000AC]
"game.exe"+43CCA: 3B 46 28              -  cmp eax,[esi+28]
"game.exe"+43CCD: 74 0F                 -  je game.exe+43CDE
// ---------- INJECTING HERE ----------
"game.exe"+43CCF: 88 14 07              -  mov [edi+eax],dl
"game.exe"+43CD2: 66 83 46 14 02        -  add word ptr [esi+14],02
// ---------- DONE INJECTING  ----------
"game.exe"+43CD7: 83 46 20 06           -  add dword ptr [esi+20],06
"game.exe"+43CDB: 5F                    -  pop edi
"game.exe"+43CDC: 5E                    -  pop esi
"game.exe"+43CDD: C3                    -  ret 
"game.exe"+43CDE: 8B 4E 04              -  mov ecx,[esi+04]
"game.exe"+43CE1: 52                    -  push edx
"game.exe"+43CE2: 57                    -  push edi
"game.exe"+43CE3: FF 71 1C              -  push [ecx+1C]
"game.exe"+43CE6: 8B 41 04              -  mov eax,[ecx+04]
"game.exe"+43CE9: FF D0                 -  call eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseconnes]+32</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>114</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseconnes]+ae</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"04. Contra 1988 FAMICOM"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-15
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+43DCF)
define(bytes,88 14 07 66 83 46 14 02)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(baseconnes)
registersymbol(baseconnes)

newmem:

code:
mov [baseconnes],eax
  mov [edi+eax],dl
  add word ptr [esi+14],02
  jmp return
baseconnes:
db 0
address:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [edi+eax],dl
  // add word ptr [esi+14],02
unregistersymbol(baseconnes)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+43CCF

"game.exe"+43CB0: B9 02 00 00 00        -  mov ecx,00000002
"game.exe"+43CB5: 84 D2                 -  test dl,dl
"game.exe"+43CB7: 0F 45 C8              -  cmovne ecx,eax
"game.exe"+43CBA: 8A 46 1A              -  mov al,[esi+1A]
"game.exe"+43CBD: 24 7D                 -  and al,7D
"game.exe"+43CBF: 0A C1                 -  or al,cl
"game.exe"+43CC1: 88 46 1A              -  mov [esi+1A],al
"game.exe"+43CC4: 8B 86 AC 00 00 00     -  mov eax,[esi+000000AC]
"game.exe"+43CCA: 3B 46 28              -  cmp eax,[esi+28]
"game.exe"+43CCD: 74 0F                 -  je game.exe+43CDE
// ---------- INJECTING HERE ----------
"game.exe"+43CCF: 88 14 07              -  mov [edi+eax],dl
"game.exe"+43CD2: 66 83 46 14 02        -  add word ptr [esi+14],02
// ---------- DONE INJECTING  ----------
"game.exe"+43CD7: 83 46 20 06           -  add dword ptr [esi+20],06
"game.exe"+43CDB: 5F                    -  pop edi
"game.exe"+43CDC: 5E                    -  pop esi
"game.exe"+43CDD: C3                    -  ret 
"game.exe"+43CDE: 8B 4E 04              -  mov ecx,[esi+04]
"game.exe"+43CE1: 52                    -  push edx
"game.exe"+43CE2: 57                    -  push edi
"game.exe"+43CE3: FF 71 1C              -  push [ecx+1C]
"game.exe"+43CE6: 8B 41 04              -  mov eax,[ecx+04]
"game.exe"+43CE9: FF D0                 -  call eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>116</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseconnes]+32</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>117</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseconnes]+ae</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"05. Super C 1990 NES + Jap "</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+433A7)
define(bytes,0F B6 14 02 EB 10)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basesc)
registersymbol(basesc)

newmem:

code:
mov [basesc],eax
  movzx edx,byte ptr [edx+eax]
  jmp game.exe+433BD
  jmp return

basesc:
db 0

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // movzx edx,byte ptr [edx+eax]
  // jmp game.exe+433BD

dealloc(newmem)
unregistersymbol(basesc)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+432A7

"game.exe"+43287: FF 46 20           -  inc [esi+20]
"game.exe"+4328A: 0F B6 C0           -  movzx eax,al
"game.exe"+4328D: 66 03 C3           -  add ax,bx
"game.exe"+43290: 0F B7 D0           -  movzx edx,ax
"game.exe"+43293: 8B C2              -  mov eax,edx
"game.exe"+43295: C1 E8 0B           -  shr eax,0B
"game.exe"+43298: 8B 44 86 2C        -  mov eax,[esi+eax*4+2C]
"game.exe"+4329C: 3B 46 28           -  cmp eax,[esi+28]
"game.exe"+4329F: 74 0C              -  je game.exe+432AD
"game.exe"+432A1: 81 E2 FF 07 00 00  -  and edx,000007FF
// ---------- INJECTING HERE ----------
"game.exe"+432A7: 0F B6 14 02        -  movzx edx,byte ptr [edx+eax]
"game.exe"+432AB: EB 10              -  jmp game.exe+432BD
// ---------- DONE INJECTING  ----------
"game.exe"+432AD: 8B 4E 04           -  mov ecx,[esi+04]
"game.exe"+432B0: 52                 -  push edx
"game.exe"+432B1: FF 71 1C           -  push [ecx+1C]
"game.exe"+432B4: 8B 01              -  mov eax,[ecx]
"game.exe"+432B6: FF D0              -  call eax
"game.exe"+432B8: 83 C4 08           -  add esp,08
"game.exe"+432BB: 8B D0              -  mov edx,eax
"game.exe"+432BD: 84 D2              -  test dl,dl
"game.exe"+432BF: 79 07              -  jns game.exe+432C8
"game.exe"+432C1: B9 80 00 00 00     -  mov ecx,00000080
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>47</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basesc]+53</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basesc]+c4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"06. Contra III: The Alien Wars 1992 SNES + Jap"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+B1F42)
define(bytes,0F B6 2C 38 EB 11)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basec3aw)
registersymbol(basec3aw)

newmem:

code:
mov [basec3aw],eax
  movzx ebp,byte ptr [eax+edi]
  jmp game.exe+B1F59
  jmp return

basec3aw:
db 0

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // movzx ebp,byte ptr [eax+edi]
  // jmp game.exe+B1F59

dealloc(newmem)
unregistersymbol(basec3aw)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+B1DC2

"game.exe"+B1DA9: 8B 70 0C           -  mov esi,[eax+0C]
"game.exe"+B1DAC: 23 F7              -  and esi,edi
"game.exe"+B1DAE: C1 E6 04           -  shl esi,04
"game.exe"+B1DB1: 03 F1              -  add esi,ecx
"game.exe"+B1DB3: 8B 0E              -  mov ecx,[esi]
"game.exe"+B1DB5: 85 C9              -  test ecx,ecx
"game.exe"+B1DB7: 74 0F              -  je game.exe+B1DC8
"game.exe"+B1DB9: 03 C9              -  add ecx,ecx
"game.exe"+B1DBB: 8B 44 C8 28        -  mov eax,[eax+ecx*8+28]
"game.exe"+B1DBF: 2B 46 04           -  sub eax,[esi+04]
// ---------- INJECTING HERE ----------
"game.exe"+B1DC2: 0F B6 2C 38        -  movzx ebp,byte ptr [eax+edi]
"game.exe"+B1DC6: EB 11              -  jmp game.exe+B1DD9
// ---------- DONE INJECTING  ----------
"game.exe"+B1DC8: 8B 76 08           -  mov esi,[esi+08]
"game.exe"+B1DCB: 85 F6              -  test esi,esi
"game.exe"+B1DCD: 74 08              -  je game.exe+B1DD7
"game.exe"+B1DCF: 8B 08              -  mov ecx,[eax]
"game.exe"+B1DD1: FF D6              -  call esi
"game.exe"+B1DD3: 8B E8              -  mov ebp,eax
"game.exe"+B1DD5: EB 02              -  jmp game.exe+B1DD9
"game.exe"+B1DD7: 33 ED              -  xor ebp,ebp
"game.exe"+B1DD9: 8B 74 24 10        -  mov esi,[esp+10]
"game.exe"+B1DDD: 8D 43 01           -  lea eax,[ebx+01]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>60</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f8a</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"P1 Bombs"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1F8C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"P1 Invincible (freeze value)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+224</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"P1 Weapon Slot 1 (0-5 Weapons)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f84</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"P1 Weapon Slot 2 (0-5 Weapons)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f86</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"P1 Shield (freeze value 500)"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>[basec3aw]+1f88</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>52</ID>
      <Description>"07. Operation C 1991 GB + Jap"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+9035B)
define(bytes,0F B6 04 18 88 47 35)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(baseoc)
registersymbol(baseoc)

newmem:

code:
mov [baseoc],eax
  movzx eax,byte ptr [eax+ebx]
  mov [edi+35],al
  jmp return

baseoc:
db 0
address:
  jmp newmem
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movzx eax,byte ptr [eax+ebx]
  // mov [edi+35],al

dealloc(newmem)
unregistersymbol(baseoc)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+901EB

"game.exe"+901D2: 8B 56 0C           -  mov edx,[esi+0C]
"game.exe"+901D5: 23 D3              -  and edx,ebx
"game.exe"+901D7: C1 E2 04           -  shl edx,04
"game.exe"+901DA: 03 D0              -  add edx,eax
"game.exe"+901DC: 8B 02              -  mov eax,[edx]
"game.exe"+901DE: 85 C0              -  test eax,eax
"game.exe"+901E0: 74 15              -  je game.exe+901F7
"game.exe"+901E2: 03 C0              -  add eax,eax
"game.exe"+901E4: 8B 44 C6 28        -  mov eax,[esi+eax*8+28]
"game.exe"+901E8: 2B 42 04           -  sub eax,[edx+04]
// ---------- INJECTING HERE ----------
"game.exe"+901EB: 0F B6 04 18        -  movzx eax,byte ptr [eax+ebx]
"game.exe"+901EF: 88 47 35           -  mov [edi+35],al
// ---------- DONE INJECTING  ----------
"game.exe"+901F2: 5F                 -  pop edi
"game.exe"+901F3: 5E                 -  pop esi
"game.exe"+901F4: 5D                 -  pop ebp
"game.exe"+901F5: 5B                 -  pop ebx
"game.exe"+901F6: C3                 -  ret 
"game.exe"+901F7: 8B 42 08           -  mov eax,[edx+08]
"game.exe"+901FA: 85 C0              -  test eax,eax
"game.exe"+901FC: 74 0E              -  je game.exe+9020C
"game.exe"+901FE: 8B 0E              -  mov ecx,[esi]
"game.exe"+90200: 8B D5              -  mov edx,ebp
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseoc]+c888</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"Invincible (freeze value)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[baseoc]+c018</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"08. Contra Hard Corps 1994 GEN + Jap"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>86</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+38780)
define(bytes,66 89 14 48 8B 46 7C)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basechc)
registersymbol(basechc)

newmem:

code:
mov [basechc],eax
  mov [eax+ecx*2],dx
  mov eax,[esi+7C]
  jmp return

basechc:
db 0

address:
  jmp newmem
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [eax+ecx*2],dx
  // mov eax,[esi+7C]

dealloc(newmem)
unregistersymbol(basechc)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+38680

"game.exe"+3865A: C1 E8 10              -  shr eax,10
"game.exe"+3865D: 0F B6 C0              -  movzx eax,al
"game.exe"+38660: 8B 84 86 C4 05 00 00  -  mov eax,[esi+eax*4+000005C4]
"game.exe"+38667: 3B 86 C0 01 00 00     -  cmp eax,[esi+000001C0]
"game.exe"+3866D: 74 1F                 -  je game.exe+3868E
"game.exe"+3866F: FF 74 24 10           -  push [esp+10]
"game.exe"+38673: D1 E9                 -  shr ecx,1
"game.exe"+38675: FF 74 24 10           -  push [esp+10]
"game.exe"+38679: 81 E1 FF 7F 00 00     -  and ecx,00007FFF
"game.exe"+3867F: 56                    -  push esi
// ---------- INJECTING HERE ----------
"game.exe"+38680: 66 89 14 48           -  mov [eax+ecx*2],dx
"game.exe"+38684: 8B 46 7C              -  mov eax,[esi+7C]
// ---------- DONE INJECTING  ----------
"game.exe"+38687: FF D0                 -  call eax
"game.exe"+38689: 83 C4 0C              -  add esp,0C
"game.exe"+3868C: 5E                    -  pop esi
"game.exe"+3868D: C3                    -  ret 
"game.exe"+3868E: 8B 46 04              -  mov eax,[esi+04]
"game.exe"+38691: 81 E1 FF FF FF 00     -  and ecx,game.exe+36FFFF
"game.exe"+38697: 52                    -  push edx
"game.exe"+38698: 51                    -  push ecx
"game.exe"+38699: FF 70 1C              -  push [eax+1C]
"game.exe"+3869C: 8B 40 0C              -  mov eax,[eax+0C]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa0d</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>89</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+d758</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>90</ID>
              <Description>"P1 Bombs"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"P1 Weapon Unlocker (change to 61)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa0e</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>54</ID>
      <Description>"09. Super Probotector: Alien Wars 1992 SNES"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+B1F42)
define(bytes,0F B6 2C 38 EB 11)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basec3aw)
registersymbol(basec3aw)

newmem:

code:
mov [basec3aw],eax
  movzx ebp,byte ptr [eax+edi]
  jmp game.exe+B1F59
  jmp return

basec3aw:
db 0

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // movzx ebp,byte ptr [eax+edi]
  // jmp game.exe+B1F59

dealloc(newmem)
unregistersymbol(basec3aw)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+B1DC2

"game.exe"+B1DA9: 8B 70 0C           -  mov esi,[eax+0C]
"game.exe"+B1DAC: 23 F7              -  and esi,edi
"game.exe"+B1DAE: C1 E6 04           -  shl esi,04
"game.exe"+B1DB1: 03 F1              -  add esi,ecx
"game.exe"+B1DB3: 8B 0E              -  mov ecx,[esi]
"game.exe"+B1DB5: 85 C9              -  test ecx,ecx
"game.exe"+B1DB7: 74 0F              -  je game.exe+B1DC8
"game.exe"+B1DB9: 03 C9              -  add ecx,ecx
"game.exe"+B1DBB: 8B 44 C8 28        -  mov eax,[eax+ecx*8+28]
"game.exe"+B1DBF: 2B 46 04           -  sub eax,[esi+04]
// ---------- INJECTING HERE ----------
"game.exe"+B1DC2: 0F B6 2C 38        -  movzx ebp,byte ptr [eax+edi]
"game.exe"+B1DC6: EB 11              -  jmp game.exe+B1DD9
// ---------- DONE INJECTING  ----------
"game.exe"+B1DC8: 8B 76 08           -  mov esi,[esi+08]
"game.exe"+B1DCB: 85 F6              -  test esi,esi
"game.exe"+B1DCD: 74 08              -  je game.exe+B1DD7
"game.exe"+B1DCF: 8B 08              -  mov ecx,[eax]
"game.exe"+B1DD1: FF D6              -  call esi
"game.exe"+B1DD3: 8B E8              -  mov ebp,eax
"game.exe"+B1DD5: EB 02              -  jmp game.exe+B1DD9
"game.exe"+B1DD7: 33 ED              -  xor ebp,ebp
"game.exe"+B1DD9: 8B 74 24 10        -  mov esi,[esp+10]
"game.exe"+B1DDD: 8D 43 01           -  lea eax,[ebx+01]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>93</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f8a</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>94</ID>
              <Description>"P1 Bombs"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1F8C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"P1 Invincible (freeze value)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+224</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>96</ID>
              <Description>"P1 Weapon Slot 1 (0-5 Weapons)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f84</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>97</ID>
              <Description>"P1 Weapon Slot 2 (0-5 Weapons)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basec3aw]+1f86</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"P1 Shield (freeze value 500)"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>[basec3aw]+1f88</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"10. Probotector 1994 MD"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>99</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : game.exe
  Version: 
  Date   : 2019-06-12
  Author :   

  This script does blah blah blah
}

define(address,"game.exe"+38780)
define(bytes,66 89 14 48 8B 46 7C)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(basechc)
registersymbol(basechc)

newmem:

code:
mov [basechc],eax
  mov [eax+ecx*2],dx
  mov eax,[esi+7C]
  jmp return

basechc:
db 0

address:
  jmp newmem
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [eax+ecx*2],dx
  // mov eax,[esi+7C]

dealloc(newmem)
unregistersymbol(basechc)
{
// ORIGINAL CODE - INJECTION POINT: "game.exe"+38680

"game.exe"+3865A: C1 E8 10              -  shr eax,10
"game.exe"+3865D: 0F B6 C0              -  movzx eax,al
"game.exe"+38660: 8B 84 86 C4 05 00 00  -  mov eax,[esi+eax*4+000005C4]
"game.exe"+38667: 3B 86 C0 01 00 00     -  cmp eax,[esi+000001C0]
"game.exe"+3866D: 74 1F                 -  je game.exe+3868E
"game.exe"+3866F: FF 74 24 10           -  push [esp+10]
"game.exe"+38673: D1 E9                 -  shr ecx,1
"game.exe"+38675: FF 74 24 10           -  push [esp+10]
"game.exe"+38679: 81 E1 FF 7F 00 00     -  and ecx,00007FFF
"game.exe"+3867F: 56                    -  push esi
// ---------- INJECTING HERE ----------
"game.exe"+38680: 66 89 14 48           -  mov [eax+ecx*2],dx
"game.exe"+38684: 8B 46 7C              -  mov eax,[esi+7C]
// ---------- DONE INJECTING  ----------
"game.exe"+38687: FF D0                 -  call eax
"game.exe"+38689: 83 C4 0C              -  add esp,0C
"game.exe"+3868C: 5E                    -  pop esi
"game.exe"+3868D: C3                    -  ret 
"game.exe"+3868E: 8B 46 04              -  mov eax,[esi+04]
"game.exe"+38691: 81 E1 FF FF FF 00     -  and ecx,game.exe+36FFFF
"game.exe"+38697: 52                    -  push edx
"game.exe"+38698: 51                    -  push ecx
"game.exe"+38699: FF 70 1C              -  push [eax+1C]
"game.exe"+3869C: 8B 40 0C              -  mov eax,[eax+0C]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>100</ID>
              <Description>"P1 Lifes"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa0d</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>101</ID>
              <Description>"P1 Invincible (freeze value 100)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+d758</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"P1 Bombs"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>103</ID>
              <Description>"P1 Weapon Unlocker (change to 61)"</Description>
              <VariableType>Byte</VariableType>
              <Address>[basechc]+fa0e</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>table by MBRKiNG
</Comments>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"game.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)


</LuaScript>
</CheatTable>
