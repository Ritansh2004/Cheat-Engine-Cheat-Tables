<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Infinite Moves"</Description>
      <LastState Activated="1"/>
      <Color>FF8000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : candycrushsaga.exe
  Version:
  Date   : Updated in   2024-11-11
  Author : 
}

[ENABLE]

aobscanmodule(_InfiniteV,candycrushsaga.exe,0F 85 B9 00 00 00 48 8B 03) // should be unique
alloc(newmem,$1000,_InfiniteV)

label(code)
label(return)

newmem:

code:
 // jmp candycrushsaga.exe+F0387E  //jne
 jmp _InfiniteV+BF  //so the table don't need to get updated again xD
  jmp return

_InfiniteV:
  jmp newmem
  nop
return:
registersymbol(_InfiniteV)

[DISABLE]

_InfiniteV:
  db 0F 85 B9 00 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: _InfiniteV

candycrushsaga.exe+F0379B: 48 8D 15 3E 40 69 02     - lea rdx,[candycrushsaga.exe+35977E0]
candycrushsaga.exe+F037A2: 48 8D 4C 24 30           - lea rcx,[rsp+30]
candycrushsaga.exe+F037A7: 48 8B 06                 - mov rax,[rsi]
candycrushsaga.exe+F037AA: 48 8B 78 18              - mov rdi,[rax+18]
candycrushsaga.exe+F037AE: E8 DD F0 4D FF           - call candycrushsaga.exe+3E2890
candycrushsaga.exe+F037B3: 45 33 C0                 - xor r8d,r8d
candycrushsaga.exe+F037B6: 48 8B CE                 - mov rcx,rsi
candycrushsaga.exe+F037B9: 8B 10                    - mov edx,[rax]
candycrushsaga.exe+F037BB: FF D7                    - call rdi
candycrushsaga.exe+F037BD: 84 C0                    - test al,al
// ---------- INJECTING HERE ----------
_InfiniteV: 0F 85 B9 00 00 00        - jne candycrushsaga.exe+F0387E
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+F037C5: 48 8B 03                 - mov rax,[rbx]
candycrushsaga.exe+F037C8: BA 01 00 00 00           - mov edx,00000001
candycrushsaga.exe+F037CD: 48 8B CB                 - mov rcx,rbx
candycrushsaga.exe+F037D0: 4C 89 B4 24 D0 00 00 00  - mov [rsp+000000D0],r14
candycrushsaga.exe+F037D8: FF 90 90 00 00 00        - call qword ptr [rax+00000090]
candycrushsaga.exe+F037DE: 48 8B BB 58 06 00 00     - mov rdi,[rbx+00000658]
candycrushsaga.exe+F037E5: 48 8B CF                 - mov rcx,rdi
candycrushsaga.exe+F037E8: 48 8B 37                 - mov rsi,[rdi]
candycrushsaga.exe+F037EB: FF 96 E8 00 00 00        - call qword ptr [rsi+000000E8]
candycrushsaga.exe+F037F1: 8B D0                    - mov edx,eax
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>110</Key>
          </Keys>
          <Description>ON / OFF</Description>
          <ID>0</ID>
          <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
          <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"EVENTS"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>00FF00</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>33</Key>
          </Keys>
          <Description>ON/OFF</Description>
          <ID>0</ID>
          <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
          <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Jelly Streak"</Description>
          <LastState/>
          <Color>C080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version: 
  Date   : 2024-12-10
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,candycrushsaga.exe,89 6E 1C 48 8B 46 20) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
add ebp,#500

code:
  mov [rsi+1C],ebp
  mov rax,[rsi+20]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 89 6E 1C 48 8B 46 20

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+18AACA6

candycrushsaga.exe+18AAC77: 48 83 F8 1F              - cmp rax,1F
candycrushsaga.exe+18AAC7B: 76 07                    - jna candycrushsaga.exe+18AAC84
candycrushsaga.exe+18AAC7D: FF 15 25 A5 E2 01        - call qword ptr [candycrushsaga.exe+36D51A8]
candycrushsaga.exe+18AAC83: CC                       - int 3 
candycrushsaga.exe+18AAC84: E8 D7 F2 87 01           - call candycrushsaga.exe+3129F60
candycrushsaga.exe+18AAC89: 66 0F 6F 05 AF C6 E3 01  - movdqa xmm0,[candycrushsaga.exe+36E7340]
candycrushsaga.exe+18AAC91: F3 0F 7F 44 24 30        - movdqu [rsp+30],xmm0
candycrushsaga.exe+18AAC97: C6 44 24 20 00           - mov byte ptr [rsp+20],00
candycrushsaga.exe+18AAC9C: 48 8D 44 24 20           - lea rax,[rsp+20]
candycrushsaga.exe+18AACA1: 48 89 44 24 40           - mov [rsp+40],rax
// ---------- INJECTING HERE ----------
candycrushsaga.exe+18AACA6: 89 6E 1C                 - mov [rsi+1C],ebp
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+18AACA9: 48 8B 46 20              - mov rax,[rsi+20]
candycrushsaga.exe+18AACAD: 48 8B 4E 28              - mov rcx,[rsi+28]
candycrushsaga.exe+18AACB1: 48 3B C1                 - cmp rax,rcx
candycrushsaga.exe+18AACB4: 74 2B                    - je candycrushsaga.exe+18AACE1
candycrushsaga.exe+18AACB6: 48 8B 56 10              - mov rdx,[rsi+10]
candycrushsaga.exe+18AACBA: 66 0F 1F 44 00 00        - nop word ptr [rax+rax+00]
candycrushsaga.exe+18AACC0: 48 39 10                 - cmp [rax],rdx
candycrushsaga.exe+18AACC3: 74 19                    - je candycrushsaga.exe+18AACDE
candycrushsaga.exe+18AACC5: 48 83 C0 10              - add rax,10
candycrushsaga.exe+18AACC9: 48 3B C1                 - cmp rax,rcx
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey Active="0">
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <Description>ON/OFF</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Friend Challenge (Given)"</Description>
          <LastState Activated="1"/>
          <Color>404080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version: 
  Date   : 2024-12-12
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,candycrushsaga.exe,01 77 54 48 8B CF) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
add esi,#350
code:
  add [rdi+54],esi
  mov rcx,rdi
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 01 77 54 48 8B CF

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+1757CB6

candycrushsaga.exe+1757C85: 66 0F 7F 45 C7           - movdqa [rbp-39],xmm0
candycrushsaga.exe+1757C8A: 48 8D 05 E7 85 12 02     - lea rax,[candycrushsaga.exe+3880278]
candycrushsaga.exe+1757C91: 48 89 45 B7              - mov [rbp-49],rax
candycrushsaga.exe+1757C95: 48 C7 45 BF 21 00 00 00  - mov qword ptr [rbp-41],00000021
candycrushsaga.exe+1757C9D: 4C 8D 45 C7              - lea r8,[rbp-39]
candycrushsaga.exe+1757CA1: 48 8D 55 B7              - lea rdx,[rbp-49]
candycrushsaga.exe+1757CA5: 48 8D 4D 17              - lea rcx,[rbp+17]
candycrushsaga.exe+1757CA9: E8 72 C5 99 01           - call candycrushsaga.exe+30F4220
candycrushsaga.exe+1757CAE: BB 02 00 00 00           - mov ebx,00000002
candycrushsaga.exe+1757CB3: 89 5D A7                 - mov [rbp-59],ebx
// ---------- INJECTING HERE ----------
candycrushsaga.exe+1757CB6: 01 77 54                 - add [rdi+54],esi
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+1757CB9: 48 8B CF                 - mov rcx,rdi
candycrushsaga.exe+1757CBC: E8 9F F5 FF FF           - call candycrushsaga.exe+1757260
candycrushsaga.exe+1757CC1: 83 E3 FD                 - and ebx,-03
candycrushsaga.exe+1757CC4: 89 5D A7                 - mov [rbp-59],ebx
candycrushsaga.exe+1757CC7: 48 8B 55 2F              - mov rdx,[rbp+2F]
candycrushsaga.exe+1757CCB: 48 83 FA 0F              - cmp rdx,0F
candycrushsaga.exe+1757CCF: 76 34                    - jna candycrushsaga.exe+1757D05
candycrushsaga.exe+1757CD1: 48 FF C2                 - inc rdx
candycrushsaga.exe+1757CD4: 48 8B 4D 17              - mov rcx,[rbp+17]
candycrushsaga.exe+1757CD8: 48 8B C1                 - mov rax,rcx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Friend Challenge (Taken)"</Description>
          <LastState/>
          <Color>404080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version: 
  Date   : 2024-12-12
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,candycrushsaga.exe,01 B7 A4 00 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

add esi,#200

code:
  add [rdi+000000A4],esi
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 01 B7 A4 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+1757BB6

candycrushsaga.exe+1757B85: 66 0F 7F 45 C7           - movdqa [rbp-39],xmm0
candycrushsaga.exe+1757B8A: 48 8D 05 B7 86 12 02     - lea rax,[candycrushsaga.exe+3880248]
candycrushsaga.exe+1757B91: 48 89 45 B7              - mov [rbp-49],rax
candycrushsaga.exe+1757B95: 48 C7 45 BF 2D 00 00 00  - mov qword ptr [rbp-41],0000002D
candycrushsaga.exe+1757B9D: 4C 8D 45 C7              - lea r8,[rbp-39]
candycrushsaga.exe+1757BA1: 48 8D 55 B7              - lea rdx,[rbp-49]
candycrushsaga.exe+1757BA5: 48 8D 4D 17              - lea rcx,[rbp+17]
candycrushsaga.exe+1757BA9: E8 72 C6 99 01           - call candycrushsaga.exe+30F4220
candycrushsaga.exe+1757BAE: BB 01 00 00 00           - mov ebx,00000001
candycrushsaga.exe+1757BB3: 89 5D A7                 - mov [rbp-59],ebx
// ---------- INJECTING HERE ----------
candycrushsaga.exe+1757BB6: 01 B7 A4 00 00 00        - add [rdi+000000A4],esi
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+1757BBC: 48 8B CF                 - mov rcx,rdi
candycrushsaga.exe+1757BBF: E8 CC F6 FF FF           - call candycrushsaga.exe+1757290
candycrushsaga.exe+1757BC4: 83 E3 FE                 - and ebx,-02
candycrushsaga.exe+1757BC7: 89 5D A7                 - mov [rbp-59],ebx
candycrushsaga.exe+1757BCA: 48 8B 55 2F              - mov rdx,[rbp+2F]
candycrushsaga.exe+1757BCE: 48 83 FA 0F              - cmp rdx,0F
candycrushsaga.exe+1757BD2: 76 34                    - jna candycrushsaga.exe+1757C08
candycrushsaga.exe+1757BD4: 48 FF C2                 - inc rdx
candycrushsaga.exe+1757BD7: 48 8B 4D 17              - mov rcx,[rbp+17]
candycrushsaga.exe+1757BDB: 48 8B C1                 - mov rax,rcx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Super Charger"</Description>
          <LastState Activated="1"/>
          <Color>AFE655</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version: 
  Date   : 2024-12-31
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,candycrushsaga.exe,89 BB A0 00 00 00 48 8B 01) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

add edi,#6

code:
  mov [rbx+000000A0],edi
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 89 BB A0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+1F89381

candycrushsaga.exe+1F8935F: CC                    - int 3 
candycrushsaga.exe+1F89360: 48 89 5C 24 08        - mov [rsp+08],rbx
candycrushsaga.exe+1F89365: 57                    - push rdi
candycrushsaga.exe+1F89366: 48 83 EC 20           - sub rsp,20
candycrushsaga.exe+1F8936A: 48 8B D9              - mov rbx,rcx
candycrushsaga.exe+1F8936D: 8B FA                 - mov edi,edx
candycrushsaga.exe+1F8936F: 48 8D 0D 2C 46 44 03  - lea rcx,[candycrushsaga.exe+53CD9A2]
candycrushsaga.exe+1F89376: E8 7D 12 1A 01        - call candycrushsaga.exe+312A5F8
candycrushsaga.exe+1F8937B: 48 8B 4B 08           - mov rcx,[rbx+08]
candycrushsaga.exe+1F8937F: 8B D7                 - mov edx,edi
// ---------- INJECTING HERE ----------
candycrushsaga.exe+1F89381: 89 BB A0 00 00 00     - mov [rbx+000000A0],edi
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+1F89387: 48 8B 01              - mov rax,[rcx]
candycrushsaga.exe+1F8938A: 48 8B 5C 24 30        - mov rbx,[rsp+30]
candycrushsaga.exe+1F8938F: 48 83 C4 20           - add rsp,20
candycrushsaga.exe+1F89393: 5F                    - pop rdi
candycrushsaga.exe+1F89394: 48 FF 60 70           - jmp qword ptr [rax+70]
candycrushsaga.exe+1F89398: CC                    - int 3 
candycrushsaga.exe+1F89399: CC                    - int 3 
candycrushsaga.exe+1F8939A: CC                    - int 3 
candycrushsaga.exe+1F8939B: CC                    - int 3 
candycrushsaga.exe+1F8939C: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Chocolate Box"</Description>
          <LastState Activated="1"/>
          <Color>1DD9DE</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version:
  Date   : 2025-03-02
  Author : 

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat



aobscanmodule(choco,candycrushsaga.exe,89 7A 54 48 83 C2 18) // should be unique
alloc(newmem,$1000,choco)

label(code)
label(return)

newmem:

mov edi,#7000

code:
  mov [rdx+54],edi
  add rdx,18
  jmp return

choco:
  jmp newmem
  nop 2
return:
registersymbol(choco)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
choco:
  db 89 7A 54 48 83 C2 18

unregistersymbol(choco)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+112CF5D

candycrushsaga.exe+112CF36: 48 83 EC 20           - sub rsp,20
candycrushsaga.exe+112CF3A: 48 8B D9              - mov rbx,rcx
candycrushsaga.exe+112CF3D: 8B FA                 - mov edi,edx
candycrushsaga.exe+112CF3F: 48 8D 0D CA 08 25 04  - lea rcx,[candycrushsaga.exe+537D810]
candycrushsaga.exe+112CF46: E8 6D 08 FB 01        - call candycrushsaga.exe+30DD7B8
candycrushsaga.exe+112CF4B: 48 8D 53 18           - lea rdx,[rbx+18]
candycrushsaga.exe+112CF4F: 48 85 D2              - test rdx,rdx
candycrushsaga.exe+112CF52: 74 1A                 - je candycrushsaga.exe+112CF6E
candycrushsaga.exe+112CF54: 80 BA 28 01 00 00 01  - cmp byte ptr [rdx+00000128],01
candycrushsaga.exe+112CF5B: 75 11                 - jne candycrushsaga.exe+112CF6E
// ---------- INJECTING HERE ----------
candycrushsaga.exe+112CF5D: 89 7A 54              - mov [rdx+54],edi
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+112CF60: 48 83 C2 18           - add rdx,18
candycrushsaga.exe+112CF64: 48 8B 4B 08           - mov rcx,[rbx+08]
candycrushsaga.exe+112CF68: 48 8B 01              - mov rax,[rcx]
candycrushsaga.exe+112CF6B: FF 50 30              - call qword ptr [rax+30]
candycrushsaga.exe+112CF6E: 48 8B 5C 24 30        - mov rbx,[rsp+30]
candycrushsaga.exe+112CF73: 48 83 C4 20           - add rsp,20
candycrushsaga.exe+112CF77: 5F                    - pop rdi
candycrushsaga.exe+112CF78: C3                    - ret
candycrushsaga.exe+112CF79: CC                    - int 3
candycrushsaga.exe+112CF7A: CC                    - int 3
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"All Candy Event's (Need Qualifier)"</Description>
          <LastState/>
          <Color>D86F47</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : candycrushsaga.exe
  Version: 
  Date   : 2025-01-24
  Author : DANGER DASH
  Note   : This script is use to find and change the background value of all
           candy's on every level...!!!
  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(candy,candycrushsaga.exe,01 79 14 48 83 C4 30) // should be unique
alloc(newmem,$1000,candy)

label(code)
label(return)

newmem:

add edi,#999

code:
  add [rcx+14],edi
  add rsp,30
  jmp return

candy:
  jmp newmem
  nop 2
return:
registersymbol(candy)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
candy:
  db 01 79 14 48 83 C4 30

unregistersymbol(candy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: candycrushsaga.exe+D9FFAB

candycrushsaga.exe+D9FF7E: 48 8B D9              - mov rbx,rcx
candycrushsaga.exe+D9FF81: 41 8B F8              - mov edi,r8d
candycrushsaga.exe+D9FF84: 48 8D 0D AD DB 57 04  - lea rcx,[candycrushsaga.exe+531DB38]
candycrushsaga.exe+D9FF8B: E8 78 0E 39 02        - call candycrushsaga.exe+3130E08
candycrushsaga.exe+D9FF90: 48 8D 4B 08           - lea rcx,[rbx+08]
candycrushsaga.exe+D9FF94: 4C 8D 44 24 48        - lea r8,[rsp+48]
candycrushsaga.exe+D9FF99: 48 8D 54 24 20        - lea rdx,[rsp+20]
candycrushsaga.exe+D9FF9E: E8 9D BD 79 FF        - call candycrushsaga.exe+53BD40
candycrushsaga.exe+D9FFA3: 48 8B 5C 24 50        - mov rbx,[rsp+50]
candycrushsaga.exe+D9FFA8: 48 8B 08              - mov rcx,[rax]
// ---------- INJECTING HERE ----------
candycrushsaga.exe+D9FFAB: 01 79 14              - add [rcx+14],edi
// ---------- DONE INJECTING  ----------
candycrushsaga.exe+D9FFAE: 48 83 C4 30           - add rsp,30
candycrushsaga.exe+D9FFB2: 5F                    - pop rdi
candycrushsaga.exe+D9FFB3: C3                    - ret 
candycrushsaga.exe+D9FFB4: CC                    - int 3 
candycrushsaga.exe+D9FFB5: CC                    - int 3 
candycrushsaga.exe+D9FFB6: CC                    - int 3 
candycrushsaga.exe+D9FFB7: CC                    - int 3 
candycrushsaga.exe+D9FFB8: CC                    - int 3 
candycrushsaga.exe+D9FFB9: CC                    - int 3 
candycrushsaga.exe+D9FFBA: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>jelly_streak :mov [rsi+1C],ebp</Description>
      <AddressString>candycrushsaga.exe+18AACA6</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>6E</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>friend_challenge_given :add [rdi+54],esi</Description>
      <AddressString>candycrushsaga.exe+1757CB6</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
        <Byte>5D</Byte>
        <Byte>A7</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>77</Byte>
        <Byte>54</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
        <Byte>E8</Byte>
        <Byte>9F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>friend_challenge_taken :add [rdi+000000A4],esi</Description>
      <AddressString>candycrushsaga.exe+1757BB6</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
        <Byte>5D</Byte>
        <Byte>A7</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>B7</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
        <Byte>E8</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>super_charger :mov [rbx+000000A0],edi</Description>
      <AddressString>candycrushsaga.exe+1F89381</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>D7</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>BB</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>01</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>don't_feed_the_troll :mov [rbx+0C],edi</Description>
      <AddressString>candycrushsaga.exe+1DFA51D</AddressString>
      <Before>
        <Byte>EB</Byte>
        <Byte>03</Byte>
        <Byte>89</Byte>
        <Byte>73</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>7B</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>D7</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>candy_events :add [rcx+14],edi</Description>
      <AddressString>candycrushsaga.exe+D9FFAB</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>50</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>79</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>30</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"candycrushsaga.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)


</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"candycrushsaga.exe"+FEF40F</Address>
      <Comment>Infinite Moves
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
