<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>158</ID>
      <Description>"Alan Wake's American Nightmare"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Arcade Action/Story Mode   [Boost]   Flashlight"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(flashlight,alan_wakes_american_nightmare.exe,D9 59 04 8B 16 D9)
registersymbol(flashlight)
flashlight:
  db 90 90 90
[DISABLE]
unregistersymbol(flashlight)
flashlight:
  db D9 59 04 8B 16
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Arcade Action/Story Mode   [Endurance/Health]"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(endurance_health,alan_wakes_american_nightmare.exe,D9 46 0C D9 45 F0)
alloc(newmem,$100)
label(return)
registersymbol(endurance_health)
newmem:
  mov [esi+0C],(float)1
  fld dword ptr [esi+0C]
  fld dword ptr [ebp-10]
  jmp return
endurance_health:
  jmp newmem
  nop
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(endurance_health)
endurance_health:
  db D9 46 0C D9 45 F0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"Arcade Action/-------------   [Use]   Minigame Action"</Description>
          <LastState/>
          <Color>000080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(minigame_action,alan_wakes_american_nightmare.exe,D8 5E 08 DF E0 F6 C4 41 75 53)
alloc(newmem,$100)
label(return)
registersymbol(minigame_action)
newmem:
  mov [esi+08],(float)1
  fcomp dword ptr [esi+08]
  fnstsw ax
  jmp return
minigame_action:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(minigame_action)
minigame_action:
  db D8 5E 08 DF E0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>129</ID>
          <Description>"Arcade Action/Story Mode   [Inventory]   Ammo   [Weapons]   Reload Off"</Description>
          <LastState/>
          <Color>FF8080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
local pReloadOn = getAddressList().getMemoryRecordByDescription("Arcade Action/Story Mode   [Inventory]   Ammo   [Weapons]   Reload On")
if (pReloadOn.Active) then
 pReloadOn.Active = false
end
{$asm}
aobscanmodule(ammo_off,alan_wakes_american_nightmare.exe,8B 44 8E 14 8D 4C 8E 14)
aobscanmodule(ammo_on,alan_wakes_american_nightmare.exe,89 4C 86 20 8B CE)
alloc(newmem_x,$100)
alloc(newmem_y,$100)
label(code_x)
label(return_x)
label(return_y)
registersymbol(ammo_off)
registersymbol(ammo_on)
newmem_x:
  mov [esi+ecx*4+14],(int)2
code_x:
  mov eax,[esi+ecx*4+14]
  lea ecx,[esi+ecx*4+14]
  jmp return_x
ammo_off:
  jmp newmem_x
  nop 3
return_x:
newmem_y:
  mov [esi+eax*4+20],(int)999
  mov ecx,esi
  jmp return_y
ammo_on:
  jmp newmem_y
  nop
return_y:
[DISABLE]
dealloc(newmem_x)
dealloc(newmem_y)
unregistersymbol(ammo_off)
unregistersymbol(ammo_on)
ammo_off:
  db 8B 44 8E 14 8D 4C 8E 14
ammo_on:
  db 89 4C 86 20 8B CE
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Arcade Action/Story Mode   [Inventory]   Ammo   [Weapons]   Reload On"</Description>
          <LastState/>
          <Color>FF8080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
local pReloadOff = getAddressList().getMemoryRecordByDescription("Arcade Action/Story Mode   [Inventory]   Ammo   [Weapons]   Reload Off")
if (pReloadOff.Active) then
 pReloadOff.Active = false
end
{$asm}
aobscanmodule(ammo_on,alan_wakes_american_nightmare.exe,89 4C 86 20 8B CE)
alloc(newmem_y,$100)
label(return_y)
registersymbol(ammo_on)
newmem_y:
  mov [esi+eax*4+20],(int)999
  mov ecx,esi
  jmp return_y
ammo_on:
  jmp newmem_y
  nop
return_y:
[DISABLE]
dealloc(newmem_y)
unregistersymbol(ammo_on)
ammo_on:
  db 89 4C 86 20 8B CE
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Arcade Action/Story Mode   [Inventory]   Items   [Batteries]"</Description>
          <LastState/>
          <Color>8000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(batteries,alan_wakes_american_nightmare.exe,C3 CC CC CC CC CC CC 8B 41 10 C3 CC)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(batteries)
newmem:
  mov [ecx+10],(int)99
code:
  mov eax,[ecx+10]
  ret
  int 3
  jmp return
batteries+07:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(batteries)
batteries+07:
  db 8B 41 10 C3 CC
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Arcade Action/Story Mode   [Inventory]   Items   [Throwables]   Flares/Flashbangs"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(throwables,alan_wakes_american_nightmare.exe,8B 44 81 0C 85 C0)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(throwables)
newmem:
  mov [ecx+eax*4+0C],(int)99
code:
  mov eax,[ecx+eax*4+0C]
  test eax,eax
  jmp return
throwables:
  jmp newmem
  nop
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(throwables)
throwables:
  db 8B 44 81 0C 85 C0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Arcade Action/Story Mode   [Stamina]   Sprint"</Description>
          <LastState/>
          <Color>800080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(sprint,alan_wakes_american_nightmare.exe,D9 56 7C D9 E8)
alloc(newmem,$100)
label(return)
registersymbol(sprint)
newmem:
  fst dword ptr [esi+7C]
  mov [esi+7C],(float)1
  fld1
  jmp return
sprint:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(sprint)
sprint:
  db D9 56 7C D9 E8
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"Arcade Action/-------------   [Timer]"</Description>
          <LastState/>
          <Color>8080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(arcade_action_timer,alan_wakes_american_nightmare.exe,D9 06 D9 5D E4 D9 06)
alloc(newmem,$100)
label(return)
registersymbol(arcade_action_timer)
newmem:
  mov [esi],(float)11
  fld dword ptr [esi]
  fstp dword ptr [ebp-1C]
  jmp return
arcade_action_timer:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(arcade_action_timer)
arcade_action_timer:
  db D9 06 D9 5D E4
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Arcade Action/-------------   [Score]"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(arcade_action_score,alan_wakes_american_nightmare.exe,8B 4E 08 6A 06)
alloc(newmem,$100)
label(code)
label(return)
registersymbol(arcade_action_score)
newmem:
  mov [esi+08],(int)999999999
code:
  mov ecx,[esi+08]
  push 06
  jmp return
arcade_action_score:
  jmp newmem
return:
[DISABLE]
dealloc(newmem)
unregistersymbol(arcade_action_score)
arcade_action_score:
  db 8B 4E 08 6A 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"Arcade Action/Story Mode   [Use]   Darkness"</Description>
          <LastState/>
          <Color>C08080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(darkness,alan_wakes_american_nightmare.exe,D9 40 70 8B 8E FC 00 00 00)
alloc(newmem,$100)
label(return)
registersymbol(darkness)
newmem:
  mov [eax+70],(float)0
  fld dword ptr [eax+70]
  mov ecx,[esi+FC]
  jmp return
darkness:
  jmp newmem
  nop 4
return:
[DISABLE]
dealloc(darkness)
unregistersymbol(darkness)
darkness:
  db D9 40 70 8B 8E FC 00 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"alan_wakes_american_nightmare.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)

</LuaScript>
</CheatTable>
