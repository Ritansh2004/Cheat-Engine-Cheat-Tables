<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Main Funtion's"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>8080FF</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>110</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
          <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Infinite Move"</Description>
          <LastState/>
          <Color>00FFFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-10
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(move,myling.exe,01 9F B8 00 00 00) // should be unique
alloc(newmem,$1000,move)

label(code)
label(return)

newmem:

add ebx,#1

code:
  add [rdi+000000B8],ebx
  jmp return

move:
  jmp newmem
  nop
return:
registersymbol(move)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
move:
  db 01 9F B8 00 00 00

unregistersymbol(move)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+EBF3EB

myling.exe+EBF3CD: CC                    - int 3 
myling.exe+EBF3CE: CC                    - int 3 
myling.exe+EBF3CF: CC                    - int 3 
myling.exe+EBF3D0: 48 89 5C 24 08        - mov [rsp+08],rbx
myling.exe+EBF3D5: 57                    - push rdi
myling.exe+EBF3D6: 48 83 EC 20           - sub rsp,20
myling.exe+EBF3DA: 48 8B F9              - mov rdi,rcx
myling.exe+EBF3DD: 8B DA                 - mov ebx,edx
myling.exe+EBF3DF: 48 8D 0D 83 2A D1 03  - lea rcx,[myling.exe+4BD1E69]
myling.exe+EBF3E6: E8 99 A9 F1 01        - call myling.exe+2DD9D84
// ---------- INJECTING HERE ----------
myling.exe+EBF3EB: 01 9F B8 00 00 00     - add [rdi+000000B8],ebx
// ---------- DONE INJECTING  ----------
myling.exe+EBF3F1: 0F 57 DB              - xorps xmm3,xmm3
myling.exe+EBF3F4: 44 8B 87 B8 00 00 00  - mov r8d,[rdi+000000B8]
myling.exe+EBF3FB: 8B D3                 - mov edx,ebx
myling.exe+EBF3FD: 48 8B 8F 88 00 00 00  - mov rcx,[rdi+00000088]
myling.exe+EBF404: 48 8B 5C 24 30        - mov rbx,[rsp+30]
myling.exe+EBF409: 48 83 C4 20           - add rsp,20
myling.exe+EBF40D: 5F                    - pop rdi
myling.exe+EBF40E: E9 0D E2 01 00        - jmp myling.exe+EDD620
myling.exe+EBF413: CC                    - int 3 
myling.exe+EBF414: CC                    - int 3 
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <Description>ON/OFF</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Infinite Character Power"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-10
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(power,myling.exe,89 87 84 00 00 00 48 8D) // should be unique
alloc(newmem,$1000,power)

label(code)
label(return)

newmem:

add eax,#99

code:
  mov [rdi+00000084],eax
  jmp return

power:
  jmp newmem
  nop
return:
registersymbol(power)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
power:
  db 89 87 84 00 00 00

unregistersymbol(power)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+F1C948

myling.exe+F1C925: C6 87 82 00 00 00 01        - mov byte ptr [rdi+00000082],01
myling.exe+F1C92C: 48 8B 4F 70                 - mov rcx,[rdi+70]
myling.exe+F1C930: 48 85 C9                    - test rcx,rcx
myling.exe+F1C933: 74 19                       - je myling.exe+F1C94E
myling.exe+F1C935: 48 8B 01                    - mov rax,[rcx]
myling.exe+F1C938: FF 50 58                    - call qword ptr [rax+58]
myling.exe+F1C93B: 8B 8F 84 00 00 00           - mov ecx,[rdi+00000084]
myling.exe+F1C941: 3B C8                       - cmp ecx,eax
myling.exe+F1C943: 73 09                       - jae myling.exe+F1C94E
myling.exe+F1C945: 8D 41 01                    - lea eax,[rcx+01]
// ---------- INJECTING HERE ----------
myling.exe+F1C948: 89 87 84 00 00 00           - mov [rdi+00000084],eax
// ---------- DONE INJECTING  ----------
myling.exe+F1C94E: 48 8D 5F A8                 - lea rbx,[rdi-58]
myling.exe+F1C952: 48 8B 7F 60                 - mov rdi,[rdi+60]
myling.exe+F1C956: 48 8B 07                    - mov rax,[rdi]
myling.exe+F1C959: 48 8B 68 08                 - mov rbp,[rax+08]
myling.exe+F1C95D: 48 8D 44 24 20              - lea rax,[rsp+20]
myling.exe+F1C962: 48 89 84 24 88 00 00 00     - mov [rsp+00000088],rax
myling.exe+F1C96A: 48 C7 44 24 58 00 00 00 00  - mov qword ptr [rsp+58],00000000
myling.exe+F1C973: 48 8D 8C 24 90 00 00 00     - lea rcx,[rsp+00000090]
myling.exe+F1C97B: E8 70 65 FF FF              - call myling.exe+F12EF0
myling.exe+F1C980: 84 C0                       - test al,al
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Score"</Description>
          <LastState/>
          <Color>40FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-11
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(score,myling.exe,01 5F 48 48 8B D6) // should be unique
alloc(newmem,$1000,score)

label(code)
label(return)

newmem:

add ebx,#5000

code:
  add [rdi+48],ebx
  mov rdx,rsi
  jmp return

score:
  jmp newmem
  nop
return:
registersymbol(score)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
score:
  db 01 5F 48 48 8B D6

unregistersymbol(score)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+1715C7B

myling.exe+1715C57: 49 8B E9              - mov rbp,r9
myling.exe+1715C5A: 48 8D 0D 77 C5 4C 03  - lea rcx,[myling.exe+4BE21D8]
myling.exe+1715C61: 41 8B D8              - mov ebx,r8d
myling.exe+1715C64: 48 8B F2              - mov rsi,rdx
myling.exe+1715C67: E8 18 41 6C 01        - call myling.exe+2DD9D84
myling.exe+1715C6C: 80 7C 24 50 00        - cmp byte ptr [rsp+50],00
myling.exe+1715C71: 74 08                 - je myling.exe+1715C7B
myling.exe+1715C73: 8B 47 4C              - mov eax,[rdi+4C]
myling.exe+1715C76: FF C0                 - inc eax
myling.exe+1715C78: 0F AF D8              - imul ebx,eax
// ---------- INJECTING HERE ----------
myling.exe+1715C7B: 01 5F 48              - add [rdi+48],ebx
// ---------- DONE INJECTING  ----------
myling.exe+1715C7E: 48 8B D6              - mov rdx,rsi
myling.exe+1715C81: 89 5E 08              - mov [rsi+08],ebx
myling.exe+1715C84: F2 0F 10 45 00        - movsd xmm0,[rbp+00]
myling.exe+1715C89: F2 0F 11 46 0C        - movsd [rsi+0C],xmm0
myling.exe+1715C8E: 8B 45 08              - mov eax,[rbp+08]
myling.exe+1715C91: 89 46 14              - mov [rsi+14],eax
myling.exe+1715C94: 48 8B 4F 40           - mov rcx,[rdi+40]
myling.exe+1715C98: 48 8B 5C 24 30        - mov rbx,[rsp+30]
myling.exe+1715C9D: 48 8B 6C 24 38        - mov rbp,[rsp+38]
myling.exe+1715CA2: 48 8B 74 24 40        - mov rsi,[rsp+40]
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"All Character Meter"</Description>
          <LastState/>
          <Color>0198BE</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-13
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(meter,myling.exe,48 89 43 20 48 8B 43 68) // should be unique
alloc(newmem,$1000,meter)

label(code)
label(return)

newmem:

add rax,#9999

code:
  mov [rbx+20],rax
  mov rax,[rbx+68]
  jmp return

meter:
  jmp newmem
  nop 3
return:
registersymbol(meter)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
meter:
  db 48 89 43 20 48 8B 43 68

unregistersymbol(meter)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+17FFF53

myling.exe+17FFF31: 48 3B DE        - cmp rbx,rsi
myling.exe+17FFF34: 74 19           - je myling.exe+17FFF4F
myling.exe+17FFF36: 48 8B D6        - mov rdx,rsi
myling.exe+17FFF39: 48 83 7B 58 0F  - cmp qword ptr [rbx+58],0F
myling.exe+17FFF3E: 76 03           - jna myling.exe+17FFF43
myling.exe+17FFF40: 48 8B 16        - mov rdx,[rsi]
myling.exe+17FFF43: 4C 8B 43 50     - mov r8,[rbx+50]
myling.exe+17FFF47: 48 8B CB        - mov rcx,rbx
myling.exe+17FFF4A: E8 E1 75 A8 FE  - call myling.exe+287530
myling.exe+17FFF4F: 48 8B 43 60     - mov rax,[rbx+60]
// ---------- INJECTING HERE ----------
myling.exe+17FFF53: 48 89 43 20     - mov [rbx+20],rax
// ---------- DONE INJECTING  ----------
myling.exe+17FFF57: 48 8B 43 68     - mov rax,[rbx+68]
myling.exe+17FFF5B: 48 89 43 28     - mov [rbx+28],rax
myling.exe+17FFF5F: 48 8B 43 70     - mov rax,[rbx+70]
myling.exe+17FFF63: 48 89 43 30     - mov [rbx+30],rax
myling.exe+17FFF67: 48 8B DE        - mov rbx,rsi
myling.exe+17FFF6A: 48 83 C7 40     - add rdi,40
myling.exe+17FFF6E: 48 3B FD        - cmp rdi,rbp
myling.exe+17FFF71: 75 AD           - jne myling.exe+17FFF20
myling.exe+17FFF73: 49 8B 46 08     - mov rax,[r14+08]
myling.exe+17FFF77: 48 83 E8 40     - sub rax,40
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>""</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Quest [HOME KEY]"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>36</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">Quest Activated</ActivateSound>
          <DeactivateSound TTS="EN">Quest Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Daily Quest Box"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-11
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(small_box,myling.exe,89 7B 04 3B F8) // should be unique
alloc(newmem,$1000,small_box)

label(code)
label(return)

newmem:

mov edi,#99999

code:
  mov [rbx+04],edi
  cmp edi,eax
  jmp return

small_box:
  jmp newmem
return:
registersymbol(small_box)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
small_box:
  db 89 7B 04 3B F8

unregistersymbol(small_box)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+1410A30

myling.exe+1410A06: 48 83 EC 20           - sub rsp,20
myling.exe+1410A0A: 48 8B D9              - mov rbx,rcx
myling.exe+1410A0D: 8B FA                 - mov edi,edx
myling.exe+1410A0F: 48 8D 0D F2 8D 7C 03  - lea rcx,[myling.exe+4BD9808]
myling.exe+1410A16: E8 69 93 9C 01        - call myling.exe+2DD9D84
myling.exe+1410A1B: 83 BB 98 00 00 00 00  - cmp dword ptr [rbx+00000098],00
myling.exe+1410A22: 7D 09                 - jnl myling.exe+1410A2D
myling.exe+1410A24: 8B 43 04              - mov eax,[rbx+04]
myling.exe+1410A27: 89 83 98 00 00 00     - mov [rbx+00000098],eax
myling.exe+1410A2D: 8B 43 10              - mov eax,[rbx+10]
// ---------- INJECTING HERE ----------
myling.exe+1410A30: 89 7B 04              - mov [rbx+04],edi
// ---------- DONE INJECTING  ----------
myling.exe+1410A33: 3B F8                 - cmp edi,eax
myling.exe+1410A35: 7C 03                 - jl myling.exe+1410A3A
myling.exe+1410A37: 89 43 04              - mov [rbx+04],eax
myling.exe+1410A3A: 48 8B 5C 24 30        - mov rbx,[rsp+30]
myling.exe+1410A3F: 48 83 C4 20           - add rsp,20
myling.exe+1410A43: 5F                    - pop rdi
myling.exe+1410A44: C3                    - ret 
myling.exe+1410A45: CC                    - int 3 
myling.exe+1410A46: CC                    - int 3 
myling.exe+1410A47: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Bubblegum Troll"</Description>
          <LastState/>
          <Color>C080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : myling.exe
  Version: 
  Date   : 2025-01-11
  Author : DANGER DASH

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(my_team,myling.exe,89 43 48 B0 01) // should be unique
alloc(newmem,$1000,my_team)

label(code)
label(return)

newmem:

add eax,#9000

code:
  mov [rbx+48],eax
  mov al,01
  jmp return

my_team:
  jmp newmem
return:
registersymbol(my_team)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
my_team:
  db 89 43 48 B0 01

unregistersymbol(my_team)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: myling.exe+12D1FFA

myling.exe+12D1FDB: 44 8B 43 48     - mov r8d,[rbx+48]
myling.exe+12D1FDF: 44 3B C6        - cmp r8d,esi
myling.exe+12D1FE2: 74 E0           - je myling.exe+12D1FC4
myling.exe+12D1FE4: 48 8B 13        - mov rdx,[rbx]
myling.exe+12D1FE7: 44 8B CE        - mov r9d,esi
myling.exe+12D1FEA: 48 8B CD        - mov rcx,rbp
myling.exe+12D1FED: E8 DE AD FF FF  - call myling.exe+12CCDD0
myling.exe+12D1FF2: 8B 43 48        - mov eax,[rbx+48]
myling.exe+12D1FF5: 3B C6           - cmp eax,esi
myling.exe+12D1FF7: 0F 4C C6        - cmovl eax,esi
// ---------- INJECTING HERE ----------
myling.exe+12D1FFA: 89 43 48        - mov [rbx+48],eax
// ---------- DONE INJECTING  ----------
myling.exe+12D1FFD: B0 01           - mov al,01
myling.exe+12D1FFF: EB C5           - jmp myling.exe+12D1FC6
myling.exe+12D2001: CC              - int 3 
myling.exe+12D2002: CC              - int 3 
myling.exe+12D2003: CC              - int 3 
myling.exe+12D2004: CC              - int 3 
myling.exe+12D2005: CC              - int 3 
myling.exe+12D2006: CC              - int 3 
myling.exe+12D2007: CC              - int 3 
myling.exe+12D2008: CC              - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"myling.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)


</LuaScript>
</CheatTable>
