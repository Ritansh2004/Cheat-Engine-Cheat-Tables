<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>8848</ID>
      <Description>"[Stats]"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Halos"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>Bayonetta.exe+565F344</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Magic"</Description>
          <VariableType>Float</VariableType>
          <Address>Bayonetta.exe+565F33C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8879</ID>
          <Description>"Items All Max "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Get_ItemsQuantity_AOB,Bayonetta.exe,8B 04 85 58 F3 A5 05) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax*4+05A5F358],#99
  mov eax,[eax*4+05A5F358]
  jmp return

Get_ItemsQuantity_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(Get_ItemsQuantity_AOB)

[DISABLE]

Get_ItemsQuantity_AOB:
  db 8B 04 85 58 F3 A5 05

unregistersymbol(Get_ItemsQuantity_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+744620

"Bayonetta.exe"+74460D: CC                    -  int 3 
"Bayonetta.exe"+74460E: CC                    -  int 3 
"Bayonetta.exe"+74460F: CC                    -  int 3 
"Bayonetta.exe"+744610: 8B 44 24 04           -  mov eax,[esp+04]
"Bayonetta.exe"+744614: 85 C0                 -  test eax,eax
"Bayonetta.exe"+744616: 79 03                 -  jns Bayonetta.exe+74461B
"Bayonetta.exe"+744618: 33 C0                 -  xor eax,eax
"Bayonetta.exe"+74461A: C3                    -  ret 
"Bayonetta.exe"+74461B: 83 F8 49              -  cmp eax,49
"Bayonetta.exe"+74461E: 7F F8                 -  jg Bayonetta.exe+744618
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+744620: 8B 04 85 58 F3 A5 05  -  mov eax,[eax*4+Bayonetta.exe+565F358]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+744627: C3                    -  ret 
"Bayonetta.exe"+744628: CC                    -  int 3 
"Bayonetta.exe"+744629: CC                    -  int 3 
"Bayonetta.exe"+74462A: CC                    -  int 3 
"Bayonetta.exe"+74462B: CC                    -  int 3 
"Bayonetta.exe"+74462C: CC                    -  int 3 
"Bayonetta.exe"+74462D: CC                    -  int 3 
"Bayonetta.exe"+74462E: CC                    -  int 3 
"Bayonetta.exe"+74462F: CC                    -  int 3 
"Bayonetta.exe"+744630: 57                    -  push edi
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>110</ID>
      <Description>"[Battle]"</Description>
      <Options moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>00009D</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8867</ID>
          <Description>"ZA WARUDO! [Unlimited Witch Time][Toggle: Scroll Lock]"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Get_WitchTime_AOB,Bayonetta.exe,F3 0F 10 96 5C 5D 09 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+00095D5C],(float)100
  movss xmm2,[esi+00095D5C]
  jmp return

Get_WitchTime_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Get_WitchTime_AOB)

[DISABLE]

Get_WitchTime_AOB:
  db F3 0F 10 96 5C 5D 09 00

unregistersymbol(Get_WitchTime_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+5DE658

"Bayonetta.exe"+5DE627: F3 0F 11 86 60 4A 09 00        -  movss [esi+00094A60],xmm0
"Bayonetta.exe"+5DE62F: 0F 82 DA 00 00 00              -  jb Bayonetta.exe+5DE70F
"Bayonetta.exe"+5DE635: 8B 16                          -  mov edx,[esi]
"Bayonetta.exe"+5DE637: F3 0F 10 05 68 49 D6 00        -  movss xmm0,[Bayonetta.exe+964968]
"Bayonetta.exe"+5DE63F: 8B 82 D0 00 00 00              -  mov eax,[edx+000000D0]
"Bayonetta.exe"+5DE645: 6A 01                          -  push 01
"Bayonetta.exe"+5DE647: 8B CE                          -  mov ecx,esi
"Bayonetta.exe"+5DE649: F3 0F 11 86 60 4A 09 00        -  movss [esi+00094A60],xmm0
"Bayonetta.exe"+5DE651: FF D0                          -  call eax
"Bayonetta.exe"+5DE653: E9 B7 00 00 00                 -  jmp Bayonetta.exe+5DE70F
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+5DE658: F3 0F 10 96 5C 5D 09 00        -  movss xmm2,[esi+00095D5C]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+5DE660: 0F 2F D1                       -  comiss xmm2,xmm1
"Bayonetta.exe"+5DE663: 0F 86 A6 00 00 00              -  jbe Bayonetta.exe+5DE70F
"Bayonetta.exe"+5DE669: F7 05 B4 5C 16 05 00 00 00 C0  -  test [Bayonetta.exe+4D65CB4],C0000000
"Bayonetta.exe"+5DE673: 0F 85 91 00 00 00              -  jne Bayonetta.exe+5DE70A
"Bayonetta.exe"+5DE679: F3 0F 10 86 64 5D 09 00        -  movss xmm0,[esi+00095D64]
"Bayonetta.exe"+5DE681: 0F 2F C1                       -  comiss xmm0,xmm1
"Bayonetta.exe"+5DE684: 76 12                          -  jna Bayonetta.exe+5DE698
"Bayonetta.exe"+5DE686: F3 0F 5C 86 CC 06 00 00        -  subss xmm0,[esi+000006CC]
"Bayonetta.exe"+5DE68E: F3 0F 11 86 64 5D 09 00        -  movss [esi+00095D64],xmm0
"Bayonetta.exe"+5DE696: EB 72                          -  jmp Bayonetta.exe+5DE70A
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>145</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
              <DeactivateSound>Deactivate</DeactivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>8868</ID>
              <Description>"https://www.youtube.com/watch?v=7ePWNmLP0Z0"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Instant Kill"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Set_EnemyHP_AOB,Bayonetta.exe,89 86 B4 06 00 00 85 C0 7F 26) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+000006B4],0 //eax
  jmp return

Set_EnemyHP_AOB:
  jmp newmem
  nop
return:
registersymbol(Set_EnemyHP_AOB)

[DISABLE]

Set_EnemyHP_AOB:
  db 89 86 B4 06 00 00

unregistersymbol(Set_EnemyHP_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+540FA

"Bayonetta.exe"+540D1: A1 60 DA EA 00                 -  mov eax,[Bayonetta.exe+AADA60]
"Bayonetta.exe"+540D6: 83 B8 A0 6B 09 00 00           -  cmp dword ptr [eax+00096BA0],00
"Bayonetta.exe"+540DD: 75 02                          -  jne Bayonetta.exe+540E1
"Bayonetta.exe"+540DF: 03 FF                          -  add edi,edi
"Bayonetta.exe"+540E1: 83 BE 08 09 00 00 00           -  cmp dword ptr [esi+00000908],00
"Bayonetta.exe"+540E8: 74 02                          -  je Bayonetta.exe+540EC
"Bayonetta.exe"+540EA: 33 FF                          -  xor edi,edi
"Bayonetta.exe"+540EC: 8B 86 B4 06 00 00              -  mov eax,[esi+000006B4]
"Bayonetta.exe"+540F2: 89 86 B8 06 00 00              -  mov [esi+000006B8],eax
"Bayonetta.exe"+540F8: 2B C7                          -  sub eax,edi
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+540FA: 89 86 B4 06 00 00              -  mov [esi+000006B4],eax
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+54100: 85 C0                          -  test eax,eax
"Bayonetta.exe"+54102: 7F 26                          -  jg Bayonetta.exe+5412A
"Bayonetta.exe"+54104: 83 7C 24 10 00                 -  cmp dword ptr [esp+10],00
"Bayonetta.exe"+54109: 75 15                          -  jne Bayonetta.exe+54120
"Bayonetta.exe"+5410B: 83 BE 04 09 00 00 00           -  cmp dword ptr [esi+00000904],00
"Bayonetta.exe"+54112: 75 0C                          -  jne Bayonetta.exe+54120
"Bayonetta.exe"+54114: C7 86 B4 06 00 00 00 00 00 00  -  mov [esi+000006B4],00000000
"Bayonetta.exe"+5411E: EB 0A                          -  jmp Bayonetta.exe+5412A
"Bayonetta.exe"+54120: C7 86 B4 06 00 00 01 00 00 00  -  mov [esi+000006B4],00000001
"Bayonetta.exe"+5412A: 8B 86 BC 06 00 00              -  mov eax,[esi+000006BC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8984</ID>
          <Description>"Enemies Godmode [For Training][Activate: Disable Instant Kill]"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Set_EnemyHP_AOB,Bayonetta.exe,89 86 B4 06 00 00 85 C0 7F 26) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+000006B4],#2000 //eax
  jmp return

Set_EnemyHP_AOB:
  jmp newmem
  nop
return:
registersymbol(Set_EnemyHP_AOB)

[DISABLE]

Set_EnemyHP_AOB:
  db 89 86 B4 06 00 00

unregistersymbol(Set_EnemyHP_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+540FA

"Bayonetta.exe"+540D1: A1 60 DA EA 00                 -  mov eax,[Bayonetta.exe+AADA60]
"Bayonetta.exe"+540D6: 83 B8 A0 6B 09 00 00           -  cmp dword ptr [eax+00096BA0],00
"Bayonetta.exe"+540DD: 75 02                          -  jne Bayonetta.exe+540E1
"Bayonetta.exe"+540DF: 03 FF                          -  add edi,edi
"Bayonetta.exe"+540E1: 83 BE 08 09 00 00 00           -  cmp dword ptr [esi+00000908],00
"Bayonetta.exe"+540E8: 74 02                          -  je Bayonetta.exe+540EC
"Bayonetta.exe"+540EA: 33 FF                          -  xor edi,edi
"Bayonetta.exe"+540EC: 8B 86 B4 06 00 00              -  mov eax,[esi+000006B4]
"Bayonetta.exe"+540F2: 89 86 B8 06 00 00              -  mov [esi+000006B8],eax
"Bayonetta.exe"+540F8: 2B C7                          -  sub eax,edi
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+540FA: 89 86 B4 06 00 00              -  mov [esi+000006B4],eax
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+54100: 85 C0                          -  test eax,eax
"Bayonetta.exe"+54102: 7F 26                          -  jg Bayonetta.exe+5412A
"Bayonetta.exe"+54104: 83 7C 24 10 00                 -  cmp dword ptr [esp+10],00
"Bayonetta.exe"+54109: 75 15                          -  jne Bayonetta.exe+54120
"Bayonetta.exe"+5410B: 83 BE 04 09 00 00 00           -  cmp dword ptr [esi+00000904],00
"Bayonetta.exe"+54112: 75 0C                          -  jne Bayonetta.exe+54120
"Bayonetta.exe"+54114: C7 86 B4 06 00 00 00 00 00 00  -  mov [esi+000006B4],00000000
"Bayonetta.exe"+5411E: EB 0A                          -  jmp Bayonetta.exe+5412A
"Bayonetta.exe"+54120: C7 86 B4 06 00 00 01 00 00 00  -  mov [esi+000006B4],00000001
"Bayonetta.exe"+5412A: 8B 86 BC 06 00 00              -  mov eax,[esi+000006BC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8906</ID>
          <Description>"HP Always Max"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]
aobscanmodule(Cmp_BayonettaHP01_AOB,Bayonetta.exe,83 B8 B4 06 00 00 00 74 68) // should be unique
alloc(BayonettaHP01_Mem,$1000)
aobscanmodule(Cmp_BayonettaHP_AOB02,Bayonetta.exe,83 B8 B4 06 00 00 00 74 F4) // should be unique
alloc(BayonettaHP02_Mem,$1000)
aobscanmodule(Get_BayonettaHP01_AOB,Bayonetta.exe,8B 81 08 35 09 00) // should be unique
alloc(GetBayonettaHP01_Mem,$1000)

label(BayonettaHP01_Code)
label(BayonettaHP01_Return)
label(BayonettaHP02_Code)
label(BayonettaHP02_Return)
label(GetBayonettaHP01_Code)
label(GetBayonettaHP01_Return)

BayonettaHP01_Mem:

BayonettaHP01_Code:
  push ebx
  mov ebx,[eax+6BC]
  mov [eax+6B4],ebx
  pop ebx
  cmp dword ptr [eax+000006B4],00
  jmp BayonettaHP01_Return

Cmp_BayonettaHP01_AOB:
  jmp BayonettaHP01_Mem
  nop
  nop
BayonettaHP01_Return:
registersymbol(Cmp_BayonettaHP01_AOB)

BayonettaHP02_Mem:

BayonettaHP02_Code:
  push ebx
  mov ebx,[eax+6BC]
  mov [eax+6B4],ebx
  pop ebx
  cmp dword ptr [eax+000006B4],00
  jmp BayonettaHP02_Return

Cmp_BayonettaHP_AOB02:
  jmp BayonettaHP02_Mem
  nop
  nop
BayonettaHP02_Return:
registersymbol(Cmp_BayonettaHP_AOB02)

GetBayonettaHP01_Mem:

GetBayonettaHP01_Code:

  push ebx
  mov ebx,[ecx+6BC]
  mov [ecx+00093508],ebx
  pop ebx

  mov eax,[ecx+00093508]
  jmp GetBayonettaHP01_Return

Get_BayonettaHP01_AOB:
  jmp GetBayonettaHP01_Mem
  nop
GetBayonettaHP01_Return:
registersymbol(Get_BayonettaHP01_AOB)
[DISABLE]
Cmp_BayonettaHP01_AOB:
  db 83 B8 B4 06 00 00 00

Cmp_BayonettaHP_AOB02:
  db 83 B8 B4 06 00 00 00

Get_BayonettaHP01_AOB:
  db 8B 81 08 35 09 00

unregistersymbol(Cmp_BayonettaHP01_AOB)
dealloc(BayonettaHP01_Mem)
unregistersymbol(Cmp_BayonettaHP_AOB02)
dealloc(BayonettaHP02_Mem)
unregistersymbol(Get_BayonettaHP01_AOB)
dealloc(GetBayonettaHP01_Mem)
{
// ORIGINAL BayonettaHP01_Code - INJECTION POINT: "Bayonetta.exe"+743FD9

"Bayonetta.exe"+743FB5: E8 86 60 F7 FF           -  call Bayonetta.exe+6BA040
"Bayonetta.exe"+743FBA: 85 C0                    -  test eax,eax
"Bayonetta.exe"+743FBC: 0F 85 88 00 00 00        -  jne Bayonetta.exe+74404A
"Bayonetta.exe"+743FC2: B9 50 1F B2 05           -  mov ecx,Bayonetta.exe+5721F50
"Bayonetta.exe"+743FC7: E8 A4 60 F7 FF           -  call Bayonetta.exe+6BA070
"Bayonetta.exe"+743FCC: 85 C0                    -  test eax,eax
"Bayonetta.exe"+743FCE: 75 7A                    -  jne Bayonetta.exe+74404A
"Bayonetta.exe"+743FD0: A1 60 DA EA 00           -  mov eax,[Bayonetta.exe+AADA60]
"Bayonetta.exe"+743FD5: 85 C0                    -  test eax,eax
"Bayonetta.exe"+743FD7: 74 09                    -  je Bayonetta.exe+743FE2
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+743FD9: 83 B8 B4 06 00 00 00     -  cmp dword ptr [eax+000006B4],00
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+743FE0: 74 68                    -  je Bayonetta.exe+74404A
"Bayonetta.exe"+743FE2: E8 59 D5 92 FF           -  call Bayonetta.exe+71540
"Bayonetta.exe"+743FE7: 85 C0                    -  test eax,eax
"Bayonetta.exe"+743FE9: 75 5F                    -  jne Bayonetta.exe+74404A
"Bayonetta.exe"+743FEB: 56                       -  push esi
"Bayonetta.exe"+743FEC: BE A8 26 B2 05           -  mov esi,Bayonetta.exe+57226A8
"Bayonetta.exe"+743FF1: 80 3E FF                 -  cmp byte ptr [esi],-01
"Bayonetta.exe"+743FF4: 74 37                    -  je Bayonetta.exe+74402D
"Bayonetta.exe"+743FF6: 0F B7 46 02              -  movzx eax,word ptr [esi+02]
"Bayonetta.exe"+743FFA: 66 85 C0                 -  test ax,ax
}
{
// ORIGINAL BayonettaHP02_Code - INJECTION POINT: "Bayonetta.exe"+1CFDAC

"Bayonetta.exe"+1CFD9B: CC                       -  int 3
"Bayonetta.exe"+1CFD9C: CC                       -  int 3
"Bayonetta.exe"+1CFD9D: CC                       -  int 3
"Bayonetta.exe"+1CFD9E: CC                       -  int 3
"Bayonetta.exe"+1CFD9F: CC                       -  int 3
"Bayonetta.exe"+1CFDA0: A1 60 DA EA 00           -  mov eax,[Bayonetta.exe+AADA60]
"Bayonetta.exe"+1CFDA5: 85 C0                    -  test eax,eax
"Bayonetta.exe"+1CFDA7: 75 03                    -  jne Bayonetta.exe+1CFDAC
"Bayonetta.exe"+1CFDA9: 33 C0                    -  xor eax,eax
"Bayonetta.exe"+1CFDAB: C3                       -  ret
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+1CFDAC: 83 B8 B4 06 00 00 00     -  cmp dword ptr [eax+000006B4],00
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+1CFDB3: 74 F4                    -  je Bayonetta.exe+1CFDA9
"Bayonetta.exe"+1CFDB5: 6A 00                    -  push 00
"Bayonetta.exe"+1CFDB7: 68 50 00 02 00           -  push 00020050
"Bayonetta.exe"+1CFDBC: E8 BF 90 E4 FF           -  call Bayonetta.exe+18E80
"Bayonetta.exe"+1CFDC1: 83 C4 08                 -  add esp,08
"Bayonetta.exe"+1CFDC4: 85 C0                    -  test eax,eax
"Bayonetta.exe"+1CFDC6: 75 E1                    -  jne Bayonetta.exe+1CFDA9
"Bayonetta.exe"+1CFDC8: 50                       -  push eax
"Bayonetta.exe"+1CFDC9: 68 51 00 02 00           -  push 00020051
"Bayonetta.exe"+1CFDCE: E8 AD 90 E4 FF           -  call Bayonetta.exe+18E80
}
{
// ORIGINAL GetBayonettaHP01_Code - INJECTION POINT: "Bayonetta.exe"+5D1343

"Bayonetta.exe"+5D131E: CC                             -  int 3
"Bayonetta.exe"+5D131F: CC                             -  int 3
"Bayonetta.exe"+5D1320: 83 B9 4C 6B 09 00 00           -  cmp dword ptr [ecx+00096B4C],00
"Bayonetta.exe"+5D1327: 74 1A                          -  je Bayonetta.exe+5D1343
"Bayonetta.exe"+5D1329: 8B 81 54 6B 09 00              -  mov eax,[ecx+00096B54]
"Bayonetta.exe"+5D132F: 3B 81 50 6B 09 00              -  cmp eax,[ecx+00096B50]
"Bayonetta.exe"+5D1335: 7D 06                          -  jnl Bayonetta.exe+5D133D
"Bayonetta.exe"+5D1337: 89 81 50 6B 09 00              -  mov [ecx+00096B50],eax
"Bayonetta.exe"+5D133D: B8 01 00 00 00                 -  mov eax,00000001
"Bayonetta.exe"+5D1342: C3                             -  ret
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+5D1343: 8B 81 08 35 09 00              -  mov eax,[ecx+00093508]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+5D1349: 3B 81 B4 06 00 00              -  cmp eax,[ecx+000006B4]
"Bayonetta.exe"+5D134F: 7D 29                          -  jnl Bayonetta.exe+5D137A
"Bayonetta.exe"+5D1351: FF 89 0C 35 09 00              -  dec [ecx+0009350C]
"Bayonetta.exe"+5D1357: 83 B9 0C 35 09 00 00           -  cmp dword ptr [ecx+0009350C],00
"Bayonetta.exe"+5D135E: 7F 24                          -  jg Bayonetta.exe+5D1384
"Bayonetta.exe"+5D1360: 33 D2                          -  xor edx,edx
"Bayonetta.exe"+5D1362: 3B C0                          -  cmp eax,eax
"Bayonetta.exe"+5D1364: 0F 94 C2                       -  sete dl
"Bayonetta.exe"+5D1367: 89 81 B4 06 00 00              -  mov [ecx+000006B4],eax
"Bayonetta.exe"+5D136D: C7 81 0C 35 09 00 02 00 00 00  -  mov [ecx+0009350C],00000002
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Magic Always Max"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>
[ENABLE]

aobscanmodule(Get_Magic_AOB,Bayonetta.exe,C3 CC CC CC CC F3 0F 10 81 DC F5 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+0000F5DC],(float)1000000
  movss xmm0,[ecx+0000F5DC]
  jmp return

Get_Magic_AOB+05:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Get_Magic_AOB)

[DISABLE]

Get_Magic_AOB+05:
  db F3 0F 10 81 DC F5 00 00

unregistersymbol(Get_Magic_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+FE5D0

"Bayonetta.exe"+FE5BD: CC                             -  int 3 
"Bayonetta.exe"+FE5BE: CC                             -  int 3 
"Bayonetta.exe"+FE5BF: CC                             -  int 3 
"Bayonetta.exe"+FE5C0: 0F 57 C0                       -  xorps xmm0,xmm0
"Bayonetta.exe"+FE5C3: F3 0F 11 81 DC F5 00 00        -  movss [ecx+0000F5DC],xmm0
"Bayonetta.exe"+FE5CB: C3                             -  ret 
"Bayonetta.exe"+FE5CC: CC                             -  int 3 
"Bayonetta.exe"+FE5CD: CC                             -  int 3 
"Bayonetta.exe"+FE5CE: CC                             -  int 3 
"Bayonetta.exe"+FE5CF: CC                             -  int 3 
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+FE5D0: F3 0F 10 81 DC F5 00 00        -  movss xmm0,[ecx+0000F5DC]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+FE5D8: 0F 2F 05 54 4B D6 00           -  comiss xmm0,[Bayonetta.exe+964B54]
"Bayonetta.exe"+FE5DF: 72 06                          -  jb Bayonetta.exe+FE5E7
"Bayonetta.exe"+FE5E1: B8 01 00 00 00                 -  mov eax,00000001
"Bayonetta.exe"+FE5E6: C3                             -  ret 
"Bayonetta.exe"+FE5E7: 33 C0                          -  xor eax,eax
"Bayonetta.exe"+FE5E9: C3                             -  ret 
"Bayonetta.exe"+FE5EA: CC                             -  int 3 
"Bayonetta.exe"+FE5EB: CC                             -  int 3 
"Bayonetta.exe"+FE5EC: CC                             -  int 3 
"Bayonetta.exe"+FE5ED: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8863</ID>
          <Description>"Infinite Jump"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Add_Jump_AOB,Bayonetta.exe,01 AE 78 35 09 00) // should be unique
alloc(AddJumpMem,$1000)
aobscanmodule(Cmp_Jump_AOB,Bayonetta.exe,83 BE 78 35 09 00 02 72) // should be unique
alloc(CMPJumpMem,$1000)

label(AddJumpCode)
label(AddJumpReturn)
label(CMPJumpCode)
label(CMPJumpReturn)

AddJumpMem:
AddJumpCode:
  cmp dword ptr [esi+00093578],2
  je AddJumpReturn
  add [esi+00093578],ebp
  jmp AddJumpReturn

Add_Jump_AOB:
  jmp AddJumpMem
  nop
AddJumpReturn:
registersymbol(Add_Jump_AOB)

CMPJumpMem:
CMPJumpCode:
  cmp dword ptr [esi+00093578],04
  jmp CMPJumpReturn

Cmp_Jump_AOB:
  jmp CMPJumpMem
  nop
  nop
CMPJumpReturn:
registersymbol(Cmp_Jump_AOB)
[DISABLE]

Add_Jump_AOB:
  db 01 AE 78 35 09 00

Cmp_Jump_AOB:
  db 83 BE 78 35 09 00 02

unregistersymbol(Add_Jump_AOB)
dealloc(AddJumpMem)
unregistersymbol(Cmp_Jump_AOB)
dealloc(CMPJumpMem)

{
// ORIGINAL AddJumpCode - INJECTION POINT: "Bayonetta.exe"+5E57F6

"Bayonetta.exe"+5E57C5: E8 76 A4 EF FF           -  call Bayonetta.exe+4DFC40
"Bayonetta.exe"+5E57CA: 85 C0                    -  test eax,eax
"Bayonetta.exe"+5E57CC: 0F 84 31 02 00 00        -  je Bayonetta.exe+5E5A03
"Bayonetta.exe"+5E57D2: 8B CE                    -  mov ecx,esi
"Bayonetta.exe"+5E57D4: E8 97 E6 FF FF           -  call Bayonetta.exe+5E3E70
"Bayonetta.exe"+5E57D9: 85 C0                    -  test eax,eax
"Bayonetta.exe"+5E57DB: 0F 85 09 02 00 00        -  jne Bayonetta.exe+5E59EA
"Bayonetta.exe"+5E57E1: F3 0F 10 86 80 35 09 00  -  movss xmm0,[esi+00093580]
"Bayonetta.exe"+5E57E9: 0F 2F 05 6C 49 D6 00     -  comiss xmm0,[Bayonetta.exe+96496C]
"Bayonetta.exe"+5E57F0: 0F 87 0D 02 00 00        -  ja Bayonetta.exe+5E5A03
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+5E57F6: 01 AE 78 35 09 00        -  add [esi+00093578],ebp
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+5E57FC: F3 0F 10 05 60 49 D6 00  -  movss xmm0,[Bayonetta.exe+964960]
"Bayonetta.exe"+5E5804: F3 0F 11 86 C0 5C 09 00  -  movss [esi+00095CC0],xmm0
"Bayonetta.exe"+5E580C: 39 AE 24 6B 09 00        -  cmp [esi+00096B24],ebp
"Bayonetta.exe"+5E5812: 75 23                    -  jne Bayonetta.exe+5E5837
"Bayonetta.exe"+5E5814: F3 0F 10 05 38 49 D6 00  -  movss xmm0,[Bayonetta.exe+964938]
"Bayonetta.exe"+5E581C: 53                       -  push ebx
"Bayonetta.exe"+5E581D: 53                       -  push ebx
"Bayonetta.exe"+5E581E: 6A 1D                    -  push 1D
"Bayonetta.exe"+5E5820: 53                       -  push ebx
"Bayonetta.exe"+5E5821: 8B CE                    -  mov ecx,esi
}
{
// ORIGINAL CMPJumpCode - INJECTION POINT: "Bayonetta.exe"+5E578B

"Bayonetta.exe"+5E5763: 8B C5                    -  mov eax,ebp
"Bayonetta.exe"+5E5765: 5D                       -  pop ebp
"Bayonetta.exe"+5E5766: 5E                       -  pop esi
"Bayonetta.exe"+5E5767: 5B                       -  pop ebx
"Bayonetta.exe"+5E5768: C3                       -  ret
"Bayonetta.exe"+5E5769: F6 86 00 5E 09 00 04     -  test byte ptr [esi+00095E00],04
"Bayonetta.exe"+5E5770: 0F 85 8D 02 00 00        -  jne Bayonetta.exe+5E5A03
"Bayonetta.exe"+5E5776: F3 0F 10 86 78 48 09 00  -  movss xmm0,[esi+00094878]
"Bayonetta.exe"+5E577E: 0F 2F 05 6C 49 D6 00     -  comiss xmm0,[Bayonetta.exe+96496C]
"Bayonetta.exe"+5E5785: 0F 87 78 02 00 00        -  ja Bayonetta.exe+5E5A03
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+5E578B: 83 BE 78 35 09 00 02     -  cmp dword ptr [esi+00093578],02
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+5E5792: 72 0F                    -  jb Bayonetta.exe+5E57A3
"Bayonetta.exe"+5E5794: 8B CE                    -  mov ecx,esi
"Bayonetta.exe"+5E5796: E8 A5 A4 EF FF           -  call Bayonetta.exe+4DFC40
"Bayonetta.exe"+5E579B: 85 C0                    -  test eax,eax
"Bayonetta.exe"+5E579D: 0F 84 60 02 00 00        -  je Bayonetta.exe+5E5A03
"Bayonetta.exe"+5E57A3: 39 9E 40 5D 09 00        -  cmp [esi+00095D40],ebx
"Bayonetta.exe"+5E57A9: 75 10                    -  jne Bayonetta.exe+5E57BB
"Bayonetta.exe"+5E57AB: 39 9E 50 5F 09 00        -  cmp [esi+00095F50],ebx
"Bayonetta.exe"+5E57B1: 75 08                    -  jne Bayonetta.exe+5E57BB
"Bayonetta.exe"+5E57B3: 39 9E 54 5F 09 00        -  cmp [esi+00095F54],ebx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8913</ID>
          <Description>"Allies? Godmode [May cause bug]"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>
[ENABLE]

aobscanmodule(Set_AlliesHP_AOB,Bayonetta.exe,89 81 B8 19 00 00 C7) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+000019B8],#1000 //eax
  jmp return

Set_AlliesHP_AOB:
  jmp newmem
  nop
return:
registersymbol(Set_AlliesHP_AOB)

[DISABLE]

Set_AlliesHP_AOB:
  db 89 81 B8 19 00 00

unregistersymbol(Set_AlliesHP_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+60C80F

"Bayonetta.exe"+60C7EE: CC                             -  int 3 
"Bayonetta.exe"+60C7EF: CC                             -  int 3 
"Bayonetta.exe"+60C7F0: 83 B9 08 09 00 00 00           -  cmp dword ptr [ecx+00000908],00
"Bayonetta.exe"+60C7F7: 74 04                          -  je Bayonetta.exe+60C7FD
"Bayonetta.exe"+60C7F9: 33 D2                          -  xor edx,edx
"Bayonetta.exe"+60C7FB: EB 04                          -  jmp Bayonetta.exe+60C801
"Bayonetta.exe"+60C7FD: 8B 54 24 04                    -  mov edx,[esp+04]
"Bayonetta.exe"+60C801: 8B 81 B8 19 00 00              -  mov eax,[ecx+000019B8]
"Bayonetta.exe"+60C807: 89 81 B4 06 00 00              -  mov [ecx+000006B4],eax
"Bayonetta.exe"+60C80D: 2B C2                          -  sub eax,edx
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+60C80F: 89 81 B8 19 00 00              -  mov [ecx+000019B8],eax
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+60C815: C7 05 20 37 EE 00 B4 00 00 00  -  mov [Bayonetta.exe+AE3720],000000B4
"Bayonetta.exe"+60C81F: 83 B9 B8 19 00 00 00           -  cmp dword ptr [ecx+000019B8],00
"Bayonetta.exe"+60C826: 7F 49                          -  jg Bayonetta.exe+60C871
"Bayonetta.exe"+60C828: 33 C0                          -  xor eax,eax
"Bayonetta.exe"+60C82A: 83 B9 B4 06 00 00 0A           -  cmp dword ptr [ecx+000006B4],0A
"Bayonetta.exe"+60C831: 0F 9D C0                       -  setge al
"Bayonetta.exe"+60C834: 83 7C 24 08 00                 -  cmp dword ptr [esp+08],00
"Bayonetta.exe"+60C839: 89 81 B8 19 00 00              -  mov [ecx+000019B8],eax
"Bayonetta.exe"+60C83F: 74 0A                          -  je Bayonetta.exe+60C84B
"Bayonetta.exe"+60C841: C7 81 B8 19 00 00 01 00 00 00  -  mov [ecx+000019B8],00000001
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8859</ID>
          <Description>"Current Combos"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>Bayonetta.exe+4C5BCD0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8898</ID>
          <Description>"Megatons/Gigatons Always Max"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Get_MeGiTons_AOB,Bayonetta.exe,F3 0F 58 46 2C 50) // should be unique
alloc(MeGiTonsMem,$1000)
aobscanmodule(Get_MeGiTonsWheel_AOB,Bayonetta.exe,F3 0F 10 46 74 50) // should be unique
alloc(MeGiTonsWheelMem,$1000)

label(MeGiTonsCode)
label(MeGiTonsReturn)
label(MeGiTonsWheelCode)
label(MeGiTonsWheelReturn)

MeGiTonsMem:

MeGiTonsCode:
  mov [esi+2C],(float)100
  addss xmm0,[esi+2C]
  jmp MeGiTonsReturn

Get_MeGiTons_AOB:
  jmp MeGiTonsMem
MeGiTonsReturn:
registersymbol(Get_MeGiTons_AOB)

MeGiTonsWheelMem:

MeGiTonsWheelCode:
  mov [esi+74],(float)100
  movss xmm0,[esi+74]
  jmp MeGiTonsWheelReturn

Get_MeGiTonsWheel_AOB:
  jmp MeGiTonsWheelMem
MeGiTonsWheelReturn:
registersymbol(Get_MeGiTonsWheel_AOB)

[DISABLE]

Get_MeGiTons_AOB:
  db F3 0F 58 46 2C
Get_MeGiTonsWheel_AOB:
  db F3 0F 10 46 74

unregistersymbol(Get_MeGiTons_AOB)
dealloc(MeGiTonsMem)
unregistersymbol(Get_MeGiTonsWheel_AOB)
dealloc(MeGiTonsWheelMem)
{
// ORIGINAL MeGiTonsCode - INJECTION POINT: "Bayonetta.exe"+A5E84

"Bayonetta.exe"+A5E5D: E8 3E EF F7 FF        -  call Bayonetta.exe+24DA0
"Bayonetta.exe"+A5E62: 83 7E 44 00           -  cmp dword ptr [esi+44],00
"Bayonetta.exe"+A5E66: 0F 85 03 01 00 00     -  jne Bayonetta.exe+A5F6F
"Bayonetta.exe"+A5E6C: 39 5E 3C              -  cmp [esi+3C],ebx
"Bayonetta.exe"+A5E6F: 74 3B                 -  je Bayonetta.exe+A5EAC
"Bayonetta.exe"+A5E71: 8B 46 6C              -  mov eax,[esi+6C]
"Bayonetta.exe"+A5E74: 8B 4E 60              -  mov ecx,[esi+60]
"Bayonetta.exe"+A5E77: 8B 56 48              -  mov edx,[esi+48]
"Bayonetta.exe"+A5E7A: F3 0F 10 46 28        -  movss xmm0,[esi+28]
"Bayonetta.exe"+A5E7F: F3 0F 5E 46 30        -  divss xmm0,[esi+30]
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+A5E84: F3 0F 58 46 2C        -  addss xmm0,[esi+2C]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+A5E89: 50                    -  push eax
"Bayonetta.exe"+A5E8A: 51                    -  push ecx
"Bayonetta.exe"+A5E8B: 52                    -  push edx
"Bayonetta.exe"+A5E8C: 51                    -  push ecx
"Bayonetta.exe"+A5E8D: F3 0F 11 04 24        -  movss [esp],xmm0
"Bayonetta.exe"+A5E92: E8 B9 BB F7 FF        -  call Bayonetta.exe+21A50
"Bayonetta.exe"+A5E97: 8B 44 24 1C           -  mov eax,[esp+1C]
"Bayonetta.exe"+A5E9B: 83 C4 10              -  add esp,10
"Bayonetta.exe"+A5E9E: C7 40 24 01 00 00 00  -  mov [eax+24],00000001
"Bayonetta.exe"+A5EA5: 5F                    -  pop edi
}
{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+81ACB4

"Bayonetta.exe"+81AC8D: 8D 56 10           -  lea edx,[esi+10]
"Bayonetta.exe"+81AC90: 52                 -  push edx
"Bayonetta.exe"+81AC91: E8 9A 6B EE FF     -  call Bayonetta.exe+701830
"Bayonetta.exe"+81AC96: 8B 8E B8 00 00 00  -  mov ecx,[esi+000000B8]
"Bayonetta.exe"+81AC9C: 68 FF FD FF FF     -  push FFFFFDFF
"Bayonetta.exe"+81ACA1: 6A 05              -  push 05
"Bayonetta.exe"+81ACA3: E8 E8 6D EE FF     -  call Bayonetta.exe+701A90
"Bayonetta.exe"+81ACA8: 8B 46 60           -  mov eax,[esi+60]
"Bayonetta.exe"+81ACAB: 8B 8E 80 00 00 00  -  mov ecx,[esi+00000080]
"Bayonetta.exe"+81ACB1: 8B 56 7C           -  mov edx,[esi+7C]
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+81ACB4: F3 0F 10 46 74     -  movss xmm0,[esi+74]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+81ACB9: 50                 -  push eax
"Bayonetta.exe"+81ACBA: 8B 46 78           -  mov eax,[esi+78]
"Bayonetta.exe"+81ACBD: 51                 -  push ecx
"Bayonetta.exe"+81ACBE: 52                 -  push edx
"Bayonetta.exe"+81ACBF: 50                 -  push eax
"Bayonetta.exe"+81ACC0: 51                 -  push ecx
"Bayonetta.exe"+81ACC1: 8B 8E B8 00 00 00  -  mov ecx,[esi+000000B8]
"Bayonetta.exe"+81ACC7: F3 0F 11 04 24     -  movss [esp],xmm0
"Bayonetta.exe"+81ACCC: E8 2F 6C EE FF     -  call Bayonetta.exe+701900
"Bayonetta.exe"+81ACD1: 8B 4E 5C           -  mov ecx,[esi+5C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8983</ID>
          <Description>"------- Result Screen -------"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>9046</ID>
              <Description>"Death Counter [Die again to activate script's effect]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Inc_DeathCount_AOB,Bayonetta.exe,FF 05 14 3B B3 05) // should be unique
alloc(DeathCount_Mem,$1000)
aobscanmodule(Inc_DeathCountChapter_AOB,Bayonetta.exe,66 FF 05 9C 39 B3 05) // should be unique
alloc(DeathCountChapter_Mem,$1000)

label(DeathCount_Code)
label(DeathCount_Return)
label(DeathCountChapter_Code)
label(DeathCountChapter_Return)

DeathCount_Mem:

DeathCount_Code:
  mov [Bayonetta.exe+5733B14],0
  jmp DeathCount_Return

Inc_DeathCount_AOB:
  jmp DeathCount_Mem
  nop
DeathCount_Return:
registersymbol(Inc_DeathCount_AOB)
DeathCountChapter_Mem:

DeathCountChapter_Code:
  mov word ptr [Bayonetta.exe+573399C],0
  jmp DeathCountChapter_Return

Inc_DeathCountChapter_AOB:
  jmp DeathCountChapter_Mem
  nop
  nop
DeathCountChapter_Return:
registersymbol(Inc_DeathCountChapter_AOB)

[DISABLE]

Inc_DeathCount_AOB:
  db FF 05 14 3B B3 05
Inc_DeathCountChapter_AOB:
  db 66 FF 05 9C 39 B3 05

unregistersymbol(Inc_DeathCount_AOB)
dealloc(DeathCount_Mem)
unregistersymbol(Inc_DeathCountChapter_AOB)
dealloc(DeathCountChapter_Mem)
{
// ORIGINAL DeathCount_Code - INJECTION POINT: "Bayonetta.exe"+8155B0

"Bayonetta.exe"+815590: E8 CB BD 8F FF                 -  call Bayonetta.exe+111360
"Bayonetta.exe"+815595: 68 50 15 01 00                 -  push 00011550
"Bayonetta.exe"+81559A: 68 F0 03 A5 05                 -  push Bayonetta.exe+56503F0
"Bayonetta.exe"+81559F: 68 20 3D B2 05                 -  push Bayonetta.exe+5723D20
"Bayonetta.exe"+8155A4: E8 03 62 12 00                 -  call Bayonetta.exe+93B7AC
"Bayonetta.exe"+8155A9: 83 C4 0C                       -  add esp,0C
"Bayonetta.exe"+8155AC: C3                             -  ret
"Bayonetta.exe"+8155AD: CC                             -  int 3
"Bayonetta.exe"+8155AE: CC                             -  int 3
"Bayonetta.exe"+8155AF: CC                             -  int 3
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+8155B0: FF 05 14 3B B3 05              -  inc [Bayonetta.exe+5733B14]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+8155B6: 68 80 EE 00 00                 -  push 0000EE80
"Bayonetta.exe"+8155BB: 68 20 04 A5 05                 -  push Bayonetta.exe+5650420
"Bayonetta.exe"+8155C0: 68 50 3D B2 05                 -  push Bayonetta.exe+5723D50
"Bayonetta.exe"+8155C5: E8 E2 61 12 00                 -  call Bayonetta.exe+93B7AC
"Bayonetta.exe"+8155CA: 6A 0C                          -  push 0C
"Bayonetta.exe"+8155CC: E8 9F E9 87 FF                 -  call Bayonetta.exe+93F70
"Bayonetta.exe"+8155D1: 6A 01                          -  push 01
"Bayonetta.exe"+8155D3: 6A 0C                          -  push 0C
"Bayonetta.exe"+8155D5: E8 C6 E9 87 FF                 -  call Bayonetta.exe+93FA0
"Bayonetta.exe"+8155DA: 66 FF 05 9C 39 B3 05           -  inc word ptr [Bayonetta.exe+573399C]
}
{
// ORIGINAL DeathCount_Code - INJECTION POINT: "Bayonetta.exe"+8155DA

"Bayonetta.exe"+8155B5: 90                             -  nop
"Bayonetta.exe"+8155B6: 68 80 EE 00 00                 -  push 0000EE80
"Bayonetta.exe"+8155BB: 68 20 04 A5 05                 -  push Bayonetta.exe+5650420
"Bayonetta.exe"+8155C0: 68 50 3D B2 05                 -  push Bayonetta.exe+5723D50
"Bayonetta.exe"+8155C5: E8 E2 61 12 00                 -  call Bayonetta.exe+93B7AC
"Bayonetta.exe"+8155CA: 6A 0C                          -  push 0C
"Bayonetta.exe"+8155CC: E8 9F E9 87 FF                 -  call Bayonetta.exe+93F70
"Bayonetta.exe"+8155D1: 6A 01                          -  push 01
"Bayonetta.exe"+8155D3: 6A 0C                          -  push 0C
"Bayonetta.exe"+8155D5: E8 C6 E9 87 FF                 -  call Bayonetta.exe+93FA0
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+8155DA: 66 FF 05 9C 39 B3 05           -  inc word ptr [Bayonetta.exe+573399C]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+8155E1: 83 C4 18                       -  add esp,18
"Bayonetta.exe"+8155E4: C7 05 64 52 B3 05 01 00 00 00  -  mov [Bayonetta.exe+5735264],00000001
"Bayonetta.exe"+8155EE: C3                             -  ret
"Bayonetta.exe"+8155EF: CC                             -  int 3
"Bayonetta.exe"+8155F0: F7 05 B4 5C 16 05 00 10 00 00  -  test [Bayonetta.exe+4D65CB4],1000
"Bayonetta.exe"+8155FA: 74 3F                          -  je Bayonetta.exe+81563B
"Bayonetta.exe"+8155FC: B9 50 DA EA 00                 -  mov ecx,Bayonetta.exe+AADA50
"Bayonetta.exe"+815601: E8 8A D8 8E FF                 -  call Bayonetta.exe+102E90
"Bayonetta.exe"+815606: 3D 60 0A 00 00                 -  cmp eax,00000A60
"Bayonetta.exe"+81560B: 7F 13                          -  jg Bayonetta.exe+815620
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8871</ID>
              <Description>"Result Max 999999 Combos"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Add_ResultCombo_AOB,Bayonetta.exe,01 05 98 00 A6 05) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [Bayonetta.exe+5660098],#999999
  jmp return

Add_ResultCombo_AOB:
  jmp newmem
  nop
return:
registersymbol(Add_ResultCombo_AOB)

[DISABLE]

Add_ResultCombo_AOB:
  db 01 05 98 00 A6 05

unregistersymbol(Add_ResultCombo_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+83E458

"Bayonetta.exe"+83E42E: CC                       -  int 3 
"Bayonetta.exe"+83E42F: CC                       -  int 3 
"Bayonetta.exe"+83E430: 83 3D 88 00 A6 05 01     -  cmp dword ptr [Bayonetta.exe+5660088],01
"Bayonetta.exe"+83E437: 0F 85 CC 00 00 00        -  jne Bayonetta.exe+83E509
"Bayonetta.exe"+83E43D: 56                       -  push esi
"Bayonetta.exe"+83E43E: 8B 74 24 08              -  mov esi,[esp+08]
"Bayonetta.exe"+83E442: 39 35 8C 00 A6 05        -  cmp [Bayonetta.exe+566008C],esi
"Bayonetta.exe"+83E448: 0F 85 BA 00 00 00        -  jne Bayonetta.exe+83E508
"Bayonetta.exe"+83E44E: B9 10 BC 05 05           -  mov ecx,Bayonetta.exe+4C5BC10
"Bayonetta.exe"+83E453: E8 08 6A 7E FF           -  call Bayonetta.exe+24E60
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+83E458: 01 05 98 00 A6 05        -  add [Bayonetta.exe+5660098],eax
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+83E45E: B9 10 BC 05 05           -  mov ecx,Bayonetta.exe+4C5BC10
"Bayonetta.exe"+83E463: E8 88 74 7E FF           -  call Bayonetta.exe+258F0
"Bayonetta.exe"+83E468: A1 A4 09 B7 05           -  mov eax,[Bayonetta.exe+57709A4]
"Bayonetta.exe"+83E46D: 8B 0D A8 09 B7 05        -  mov ecx,[Bayonetta.exe+57709A8]
"Bayonetta.exe"+83E473: 50                       -  push eax
"Bayonetta.exe"+83E474: 51                       -  push ecx
"Bayonetta.exe"+83E475: 68 98 09 B7 05           -  push Bayonetta.exe+5770998
"Bayonetta.exe"+83E47A: 68 90 00 A6 05           -  push Bayonetta.exe+5660090
"Bayonetta.exe"+83E47F: E8 6C EE FF FF           -  call Bayonetta.exe+83D2F0
"Bayonetta.exe"+83E484: 83 C4 10                 -  add esp,10
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8917</ID>
              <Description>"Result No Damage Taken"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Get_DamagesTaken_AOB,Bayonetta.exe,8B 4E 0C 3B 48 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+0C],0
  mov ecx,[esi+0C]
  cmp ecx,[eax+08]
  jmp return

Get_DamagesTaken_AOB:
  jmp newmem
  nop
return:
registersymbol(Get_DamagesTaken_AOB)

[DISABLE]

Get_DamagesTaken_AOB:
  db 8B 4E 0C 3B 48 08

unregistersymbol(Get_DamagesTaken_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+83D37D

"Bayonetta.exe"+83D362: 8D 44 C1 04              -  lea eax,[ecx+eax*8+04]
"Bayonetta.exe"+83D366: 53                       -  push ebx
"Bayonetta.exe"+83D367: 0F 5B D2                 -  cvtdq2ps xmm2,xmm2
"Bayonetta.exe"+83D36A: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"Bayonetta.exe"+83D36D: F3 0F 59 D1              -  mulss xmm2,xmm1
"Bayonetta.exe"+83D371: 80 CB FF                 -  or bl,-01
"Bayonetta.exe"+83D374: 0F 2F C2                 -  comiss xmm0,xmm2
"Bayonetta.exe"+83D377: 55                       -  push ebp
"Bayonetta.exe"+83D378: 76 03                    -  jna Bayonetta.exe+83D37D
"Bayonetta.exe"+83D37A: 00 5E 01                 -  add [esi+01],bl
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+83D37D: 8B 4E 0C                 -  mov ecx,[esi+0C]
"Bayonetta.exe"+83D380: 3B 48 08                 -  cmp ecx,[eax+08]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+83D383: 7E 03                    -  jle Bayonetta.exe+83D388
"Bayonetta.exe"+83D385: 00 5E 03                 -  add [esi+03],bl
"Bayonetta.exe"+83D388: 66 0F 6E 50 0C           -  movd xmm2,[eax+0C]
"Bayonetta.exe"+83D38D: 0F 5B D2                 -  cvtdq2ps xmm2,xmm2
"Bayonetta.exe"+83D390: F3 0F 59 D1              -  mulss xmm2,xmm1
"Bayonetta.exe"+83D394: 0F 2F C2                 -  comiss xmm0,xmm2
"Bayonetta.exe"+83D397: 76 03                    -  jna Bayonetta.exe+83D39C
"Bayonetta.exe"+83D399: 00 5E 01                 -  add [esi+01],bl
"Bayonetta.exe"+83D39C: 3B 48 14                 -  cmp ecx,[eax+14]
"Bayonetta.exe"+83D39F: 7E 03                    -  jle Bayonetta.exe+83D3A4
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8926</ID>
              <Description>"Result 0:00.00 Time Cleared"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Inc_ResultTime_AOB,Bayonetta.exe,FF 05 94 00 A6 05 C3 CC CC CC CC CC CC CC 56) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [Bayonetta.exe+5660094],0
  jmp return

Inc_ResultTime_AOB:
  jmp newmem
  nop
return:
registersymbol(Inc_ResultTime_AOB)

[DISABLE]

Inc_ResultTime_AOB:
  db FF 05 94 00 A6 05

unregistersymbol(Inc_ResultTime_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+83DE92

"Bayonetta.exe"+83DE7B: CC                       -  int 3 
"Bayonetta.exe"+83DE7C: CC                       -  int 3 
"Bayonetta.exe"+83DE7D: CC                       -  int 3 
"Bayonetta.exe"+83DE7E: CC                       -  int 3 
"Bayonetta.exe"+83DE7F: CC                       -  int 3 
"Bayonetta.exe"+83DE80: 83 3D 88 00 A6 05 01     -  cmp dword ptr [Bayonetta.exe+5660088],01
"Bayonetta.exe"+83DE87: 75 0F                    -  jne Bayonetta.exe+83DE98
"Bayonetta.exe"+83DE89: E8 92 E2 FF FF           -  call Bayonetta.exe+83C120
"Bayonetta.exe"+83DE8E: 85 C0                    -  test eax,eax
"Bayonetta.exe"+83DE90: 74 06                    -  je Bayonetta.exe+83DE98
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+83DE92: FF 05 94 00 A6 05        -  inc [Bayonetta.exe+5660094]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+83DE98: C3                       -  ret 
"Bayonetta.exe"+83DE99: CC                       -  int 3 
"Bayonetta.exe"+83DE9A: CC                       -  int 3 
"Bayonetta.exe"+83DE9B: CC                       -  int 3 
"Bayonetta.exe"+83DE9C: CC                       -  int 3 
"Bayonetta.exe"+83DE9D: CC                       -  int 3 
"Bayonetta.exe"+83DE9E: CC                       -  int 3 
"Bayonetta.exe"+83DE9F: CC                       -  int 3 
"Bayonetta.exe"+83DEA0: 56                       -  push esi
"Bayonetta.exe"+83DEA1: 33 F6                    -  xor esi,esi
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8923</ID>
              <Description>"Chapter No Damages Taken "</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Add_DamageTaken_AOB,Bayonetta.exe,01 05 4C 00 A6 05) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [Bayonetta.exe+566004C],0
  jmp return

Add_DamageTaken_AOB:
  jmp newmem
  nop
return:
registersymbol(Add_DamageTaken_AOB)

[DISABLE]

Add_DamageTaken_AOB:
  db 01 05 4C 00 A6 05

unregistersymbol(Add_DamageTaken_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+8356A6

"Bayonetta.exe"+83568C: CC                             -  int 3 
"Bayonetta.exe"+83568D: CC                             -  int 3 
"Bayonetta.exe"+83568E: CC                             -  int 3 
"Bayonetta.exe"+83568F: CC                             -  int 3 
"Bayonetta.exe"+835690: 83 3D CC 08 B7 05 00           -  cmp dword ptr [Bayonetta.exe+57708CC],00
"Bayonetta.exe"+835697: 74 13                          -  je Bayonetta.exe+8356AC
"Bayonetta.exe"+835699: E8 72 6A 00 00                 -  call Bayonetta.exe+83C110
"Bayonetta.exe"+83569E: 85 C0                          -  test eax,eax
"Bayonetta.exe"+8356A0: 74 0A                          -  je Bayonetta.exe+8356AC
"Bayonetta.exe"+8356A2: 8B 44 24 04                    -  mov eax,[esp+04]
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+8356A6: 01 05 4C 00 A6 05              -  add [Bayonetta.exe+566004C],eax
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+8356AC: C3                             -  ret 
"Bayonetta.exe"+8356AD: CC                             -  int 3 
"Bayonetta.exe"+8356AE: CC                             -  int 3 
"Bayonetta.exe"+8356AF: CC                             -  int 3 
"Bayonetta.exe"+8356B0: 83 3D CC 08 B7 05 00           -  cmp dword ptr [Bayonetta.exe+57708CC],00
"Bayonetta.exe"+8356B7: 74 0C                          -  je Bayonetta.exe+8356C5
"Bayonetta.exe"+8356B9: 8B 44 24 04                    -  mov eax,[esp+04]
"Bayonetta.exe"+8356BD: 66 FF 04 45 54 00 A6 05        -  inc word ptr [eax*2+Bayonetta.exe+5660054]
"Bayonetta.exe"+8356C5: C3                             -  ret 
"Bayonetta.exe"+8356C6: CC                             -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8932</ID>
              <Description>"Chapter 0:00.00 Time Cleared "</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>

[ENABLE]

aobscanmodule(Inc_ChapterTime_AOB,Bayonetta.exe,FF 05 44 00 A6 05) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [Bayonetta.exe+5660044],0
  jmp return

Inc_ChapterTime_AOB:
  jmp newmem
  nop
return:
registersymbol(Inc_ChapterTime_AOB)

[DISABLE]

Inc_ChapterTime_AOB:
  db FF 05 44 00 A6 05

unregistersymbol(Inc_ChapterTime_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+835662

"Bayonetta.exe"+83564B: CC                             -  int 3 
"Bayonetta.exe"+83564C: CC                             -  int 3 
"Bayonetta.exe"+83564D: CC                             -  int 3 
"Bayonetta.exe"+83564E: CC                             -  int 3 
"Bayonetta.exe"+83564F: CC                             -  int 3 
"Bayonetta.exe"+835650: 83 3D CC 08 B7 05 00           -  cmp dword ptr [Bayonetta.exe+57708CC],00
"Bayonetta.exe"+835657: 74 1F                          -  je Bayonetta.exe+835678
"Bayonetta.exe"+835659: E8 C2 6A 00 00                 -  call Bayonetta.exe+83C120
"Bayonetta.exe"+83565E: 85 C0                          -  test eax,eax
"Bayonetta.exe"+835660: 74 06                          -  je Bayonetta.exe+835668
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+835662: FF 05 44 00 A6 05              -  inc [Bayonetta.exe+5660044]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+835668: E8 F3 AB 7F FF                 -  call Bayonetta.exe+30260
"Bayonetta.exe"+83566D: 85 C0                          -  test eax,eax
"Bayonetta.exe"+83566F: 74 07                          -  je Bayonetta.exe+835678
"Bayonetta.exe"+835671: 83 0D 50 00 A6 05 01           -  or dword ptr [Bayonetta.exe+5660050],01
"Bayonetta.exe"+835678: C3                             -  ret 
"Bayonetta.exe"+835679: CC                             -  int 3 
"Bayonetta.exe"+83567A: CC                             -  int 3 
"Bayonetta.exe"+83567B: CC                             -  int 3 
"Bayonetta.exe"+83567C: CC                             -  int 3 
"Bayonetta.exe"+83567D: CC                             -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8925</ID>
              <Description>"Time Cleared"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>Bayonetta.exe+5660094</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Combos Total"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>Bayonetta.exe+5660098</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>8872</ID>
              <Description>"Damages Taken"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>5A6009C</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>118</ID>
      <Description>"[Extra]"</Description>
      <Options moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>9037</ID>
          <Description>"Alfheim Timer Always at 7"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]

aobscanmodule(Set_AlfHeimTime_AOB,Bayonetta.exe,F3 0F 11 46 0C 76) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+0C],(float)25200
  jmp return

Set_AlfHeimTime_AOB:
  jmp newmem
return:
registersymbol(Set_AlfHeimTime_AOB)

[DISABLE]

Set_AlfHeimTime_AOB:
  db F3 0F 11 46 0C

unregistersymbol(Set_AlfHeimTime_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+21DB7B

"Bayonetta.exe"+21DB59: 85 C0                          -  test eax,eax
"Bayonetta.exe"+21DB5B: 75 4A                          -  jne Bayonetta.exe+21DBA7
"Bayonetta.exe"+21DB5D: 8B CE                          -  mov ecx,esi
"Bayonetta.exe"+21DB5F: E8 7C F3 FF FF                 -  call Bayonetta.exe+21CEE0
"Bayonetta.exe"+21DB64: 85 C0                          -  test eax,eax
"Bayonetta.exe"+21DB66: 75 3F                          -  jne Bayonetta.exe+21DBA7
"Bayonetta.exe"+21DB68: F3 0F 10 46 0C                 -  movss xmm0,[esi+0C]
"Bayonetta.exe"+21DB6D: F3 0F 5C 05 68 14 D6 00        -  subss xmm0,[Bayonetta.exe+961468]
"Bayonetta.exe"+21DB75: 0F 57 C9                       -  xorps xmm1,xmm1
"Bayonetta.exe"+21DB78: 0F 2F C8                       -  comiss xmm1,xmm0
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+21DB7B: F3 0F 11 46 0C                 -  movss [esi+0C],xmm0
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+21DB80: 76 05                          -  jna Bayonetta.exe+21DB87
"Bayonetta.exe"+21DB82: F3 0F 11 4E 0C                 -  movss [esi+0C],xmm1
"Bayonetta.exe"+21DB87: F6 05 58 12 A0 05 08           -  test byte ptr [Bayonetta.exe+5601258],08
"Bayonetta.exe"+21DB8E: 74 07                          -  je Bayonetta.exe+21DB97
"Bayonetta.exe"+21DB90: C7 46 38 01 00 00 00           -  mov [esi+38],00000001
"Bayonetta.exe"+21DB97: F3 0F 2C 4E 0C                 -  cvttss2si ecx,[esi+0C]
"Bayonetta.exe"+21DB9C: 51                             -  push ecx
"Bayonetta.exe"+21DB9D: E8 3E 4A E0 FF                 -  call Bayonetta.exe+225E0
"Bayonetta.exe"+21DBA2: 83 C4 04                       -  add esp,04
"Bayonetta.exe"+21DBA5: 5E                             -  pop esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8877</ID>
          <Description>"Shop Ignore Verse"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>

[ENABLE]
"Bayonetta.exe"+10F3B2:
  db 90 90 90 90 90 90
"Bayonetta.exe"+10F56F:
  db 90 90 90 90 90 90
"Bayonetta.exe"+10F74F:
  db 90 90 90 90 90 90
"Bayonetta.exe"+10F3B2:
  db 90 90 90 90 90 90
"Bayonetta.exe"+10F29F:
  db 90 90 90 90 90 90
"Bayonetta.exe"+10F85F:
  db 90 90 90 90 90 90
[DISABLE]
"Bayonetta.exe"+10F3B2:
  db 39 05 44 F3 A5 05
"Bayonetta.exe"+10F56F:
  db 39 05 44 F3 A5 05
"Bayonetta.exe"+10F74F:
  db 39 05 44 F3 A5 05
"Bayonetta.exe"+10F3B2:
  db 39 05 44 F3 A5 05
"Bayonetta.exe"+10F29F:
  db 39 05 44 F3 A5 05
"Bayonetta.exe"+10F85F:
  db 39 05 44 F3 A5 05
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8895</ID>
          <Description>"Arcade Score Max"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>
[ENABLE]

aobscanmodule(Get_ArcadeScore_AOB,Bayonetta.exe,8B 8E AC 00 00 00 51) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+000000AC],#999
  mov ecx,[esi+000000AC]
  jmp return

Get_ArcadeScore_AOB:
  jmp newmem
  nop
return:
registersymbol(Get_ArcadeScore_AOB)

[DISABLE]

Get_ArcadeScore_AOB:
  db 8B 8E AC 00 00 00

unregistersymbol(Get_ArcadeScore_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+83EA3F

"Bayonetta.exe"+83EA2B: C3                             -  ret 
"Bayonetta.exe"+83EA2C: CC                             -  int 3 
"Bayonetta.exe"+83EA2D: CC                             -  int 3 
"Bayonetta.exe"+83EA2E: CC                             -  int 3 
"Bayonetta.exe"+83EA2F: CC                             -  int 3 
"Bayonetta.exe"+83EA30: 56                             -  push esi
"Bayonetta.exe"+83EA31: 8B F1                          -  mov esi,ecx
"Bayonetta.exe"+83EA33: 8B 86 A8 00 00 00              -  mov eax,[esi+000000A8]
"Bayonetta.exe"+83EA39: 50                             -  push eax
"Bayonetta.exe"+83EA3A: E8 D1 3F 7E FF                 -  call Bayonetta.exe+22A10
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+83EA3F: 8B 8E AC 00 00 00              -  mov ecx,[esi+000000AC]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+83EA45: 51                             -  push ecx
"Bayonetta.exe"+83EA46: E8 D5 3F 7E FF                 -  call Bayonetta.exe+22A20
"Bayonetta.exe"+83EA4B: F3 0F 10 05 08 15 D6 00        -  movss xmm0,[Bayonetta.exe+961508]
"Bayonetta.exe"+83EA53: F3 0F 11 44 24 04              -  movss [esp+04],xmm0
"Bayonetta.exe"+83EA59: F3 0F 10 05 10 15 D6 00        -  movss xmm0,[Bayonetta.exe+961510]
"Bayonetta.exe"+83EA61: F3 0F 11 04 24                 -  movss [esp],xmm0
"Bayonetta.exe"+83EA66: E8 75 3F 7E FF                 -  call Bayonetta.exe+229E0
"Bayonetta.exe"+83EA6B: 83 C4 08                       -  add esp,08
"Bayonetta.exe"+83EA6E: 83 BE 90 06 00 00 00           -  cmp dword ptr [esi+00000690],00
"Bayonetta.exe"+83EA75: 74 3F                          -  je Bayonetta.exe+83EAB6
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8907</ID>
              <Description>"Turn off before exchanging!"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8916</ID>
          <Description>"Arcade Set 20 Bullets"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>
[ENABLE]

aobscanmodule(Get_Bullet_AOB,Bayonetta.exe,8B 96 A8 00 00 00 F3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+000000A8],#20
  mov edx,[esi+000000A8]
  jmp return

Get_Bullet_AOB:
  jmp newmem
  nop
return:
registersymbol(Get_Bullet_AOB)

[DISABLE]

Get_Bullet_AOB:
  db 8B 96 A8 00 00 00

unregistersymbol(Get_Bullet_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Bayonetta.exe"+83E673

"Bayonetta.exe"+83E65A: CC                       -  int 3 
"Bayonetta.exe"+83E65B: CC                       -  int 3 
"Bayonetta.exe"+83E65C: CC                       -  int 3 
"Bayonetta.exe"+83E65D: CC                       -  int 3 
"Bayonetta.exe"+83E65E: CC                       -  int 3 
"Bayonetta.exe"+83E65F: CC                       -  int 3 
"Bayonetta.exe"+83E660: F3 0F 10 0D F8 3E A8 05  -  movss xmm1,[Bayonetta.exe+5683EF8]
"Bayonetta.exe"+83E668: F3 0F 59 0D 44 4B D6 00  -  mulss xmm1,[Bayonetta.exe+964B44]
"Bayonetta.exe"+83E670: 56                       -  push esi
"Bayonetta.exe"+83E671: 8B F1                    -  mov esi,ecx
// ---------- INJECTING HERE ----------
"Bayonetta.exe"+83E673: 8B 96 A8 00 00 00        -  mov edx,[esi+000000A8]
// ---------- DONE INJECTING  ----------
"Bayonetta.exe"+83E679: F3 0F 2C C1              -  cvttss2si eax,xmm1
"Bayonetta.exe"+83E67D: F3 0F 10 0D FC 3E A8 05  -  movss xmm1,[Bayonetta.exe+5683EFC]
"Bayonetta.exe"+83E685: F3 0F 59 0D 44 4B D6 00  -  mulss xmm1,[Bayonetta.exe+964B44]
"Bayonetta.exe"+83E68D: F3 0F 2C C9              -  cvttss2si ecx,xmm1
"Bayonetta.exe"+83E691: 85 D2                    -  test edx,edx
"Bayonetta.exe"+83E693: 7F 04                    -  jg Bayonetta.exe+83E699
"Bayonetta.exe"+83E695: 33 C0                    -  xor eax,eax
"Bayonetta.exe"+83E697: 33 C9                    -  xor ecx,ecx
"Bayonetta.exe"+83E699: F3 0F 10 15 14 15 D6 00  -  movss xmm2,[Bayonetta.exe+961514]
"Bayonetta.exe"+83E6A1: F3 0F 10 2D FC 14 D6 00  -  movss xmm5,[Bayonetta.exe+9614FC]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9047</ID>
      <Description>"Money"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>Bayonetta.exe+56A74B4</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Set_DamageTaken_AOB</Name>
      <Address>00C3D651</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BLucre</Name>
      <Address>015C0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BHP</Name>
      <Address>015C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetHP</Name>
      <Address>463A7445</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetLucre</Name>
      <Address>463A9B27</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IgnoreMana</Name>
      <Address>463C8647</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BaseGold</Name>
      <Address>02680000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetGold</Name>
      <Address>00F6FCC9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Set_GigaTon_AOB</Name>
      <Address>00ADCBE0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Cmp_MainHP_AOB</Name>
      <Address>00B43FD9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Cmp_PulleyButterflyStatus_AOB</Name>
      <Address>009E4233</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTTemp02</Name>
      <Address>0045C36A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTTemp</Name>
      <Address>0045C31A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTTemp01</Name>
      <Address>0045C31A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Add_ResultCombo_AOB</Name>
      <Address>00C3E458</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Inc_ResultTime_AOB</Name>
      <Address>00C3DE92</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Add_DamageTaken_AOB</Name>
      <Address>00C356A6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Inc_ChapterTime_AOB</Name>
      <Address>00C35662</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Set_AlfHeimTime_AOB</Name>
      <Address>0061DB7B</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>attachlist=getAutoAttachList()
stringlist_add(attachlist,"Bayonetta.exe");

function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)
</LuaScript>
</CheatTable>
